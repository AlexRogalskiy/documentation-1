exports.ids = [40];
exports.modules = {

/***/ "./docs/troubleshooting/common-issues.md":
/*!***********************************************!*\
  !*** ./docs/troubleshooting/common-issues.md ***!
  \***********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = ("# Troubleshooting\r\n\r\nBelow you'll find a collection of answers to commonly reported problems.\r\n\r\n## My workflow isn't working because\r\n\r\n### Scripts have compiler errors.\r\n\r\n#### Error\r\n\r\n```plaintext\r\nScripts have compiler errors.\r\n(Filename: ./Runtime/Utilities/Argv.cpp Line: 361)\r\n\r\nAborting batchmode due to failure:\r\nScripts have compiler errors.\r\n```\r\n\r\n#### Solution\r\n\r\nLikely you have a missing script or assembly.\r\n\r\nMake sure your branch is clean and all files are indeed present:\r\n\r\n- No accidentally ignored files (i.e. ignored `.tmp` might match text mesh pro);\r\n- No tracked files that you expected to be ignored;\r\n- All packages listed;\r\n- No pre-build steps that change your project differently from how that happens locally;\r\n\r\nA good way to verify this, is to (locally) clone the Unity project in a new folder and run the build from there.\r\n\r\n### Gradle error\r\n\r\n#### Error\r\n\r\n```plaintext\r\nError: 3.690 [ERROR] [org.gradle.launcher.daemon.server.DaemonStateCoordinator] Command execution: started DaemonCommandExecution[command = Build{id=69dbd5b3-10f2-488e-8640-977da68733f9, currentDir=/github/workspace/Temp/gradleOut/launcher}, connection = DefaultDaemonConnection: socket connection from /127.0.0.1:33657 to /127.0.0.1:43866] after 0.0 minutes of idle\r\n```\r\n\r\n#### Solution\r\n\r\nThere are 2 possible solutions:\r\n\r\n- Remove emojis from all environment variables (and thus workflow files), or\r\n- Upgrade your project and workflow to use Unity editor version 2020.2 or later.\r\n\r\n## I cannot activate because\r\n\r\n### 'Non-whitespace before first tag. Line: 0 Column: 1 Char: 㼼' during manual activation\r\n\r\nWhen activating a license on [license.unity3d.com](https://license.unity3d.com/), you may encounter the following error message:\r\n\r\n> Non-whitespace before first tag. Line: 0 Column: 1 Char: 㼼\r\n\r\nHere's Unity's workaround:\r\n\r\n> Unfortunately, this is a known issue our end. The relevant team are in the process of working on a fix as we speak, in the meantime there is a workaround. Try renaming the `alf` file with a command to convert characters on it with a `iconv` command.\r\n\r\n#### Solution\r\n\r\n```bash\r\nversion=v2020.1.12f1 # update this according to your version and file name\r\niconv -f UTF-8 -t utf-16BE Unity_${version}.alf > Unity_${version}.utf16be.alf\r\n```\r\n\r\n### I use my google account to login to Unity, how do I get my username and password?\r\n\r\nIf you are using google account you can have some issue with activating unity. You just need to go on the unity website, settings, security and change your password. Then use your google email and your new password and it will work just fine ;)\r\n\r\n[Source](https://gitlab.com/game-ci/unity3d-gitlab-ci-example/-/issues/149)\r\n");

/***/ })

};;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9kb2NzL3Ryb3VibGVzaG9vdGluZy9jb21tb24taXNzdWVzLm1kIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7O0FBQUE7QUFBZSwrcUJBQWduQix1REFBdUQsMEJBQTBCLDRGQUE0Riw0VUFBNFUsOEZBQThGLHduQ0FBd25DLFFBQVEsZUFBZSxRQUFRLDJXQUEyVyx5RkFBeUYsRSIsImZpbGUiOiI0MC5qcyIsInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBkZWZhdWx0IFwiIyBUcm91Ymxlc2hvb3RpbmdcXHJcXG5cXHJcXG5CZWxvdyB5b3UnbGwgZmluZCBhIGNvbGxlY3Rpb24gb2YgYW5zd2VycyB0byBjb21tb25seSByZXBvcnRlZCBwcm9ibGVtcy5cXHJcXG5cXHJcXG4jIyBNeSB3b3JrZmxvdyBpc24ndCB3b3JraW5nIGJlY2F1c2VcXHJcXG5cXHJcXG4jIyMgU2NyaXB0cyBoYXZlIGNvbXBpbGVyIGVycm9ycy5cXHJcXG5cXHJcXG4jIyMjIEVycm9yXFxyXFxuXFxyXFxuYGBgcGxhaW50ZXh0XFxyXFxuU2NyaXB0cyBoYXZlIGNvbXBpbGVyIGVycm9ycy5cXHJcXG4oRmlsZW5hbWU6IC4vUnVudGltZS9VdGlsaXRpZXMvQXJndi5jcHAgTGluZTogMzYxKVxcclxcblxcclxcbkFib3J0aW5nIGJhdGNobW9kZSBkdWUgdG8gZmFpbHVyZTpcXHJcXG5TY3JpcHRzIGhhdmUgY29tcGlsZXIgZXJyb3JzLlxcclxcbmBgYFxcclxcblxcclxcbiMjIyMgU29sdXRpb25cXHJcXG5cXHJcXG5MaWtlbHkgeW91IGhhdmUgYSBtaXNzaW5nIHNjcmlwdCBvciBhc3NlbWJseS5cXHJcXG5cXHJcXG5NYWtlIHN1cmUgeW91ciBicmFuY2ggaXMgY2xlYW4gYW5kIGFsbCBmaWxlcyBhcmUgaW5kZWVkIHByZXNlbnQ6XFxyXFxuXFxyXFxuLSBObyBhY2NpZGVudGFsbHkgaWdub3JlZCBmaWxlcyAoaS5lLiBpZ25vcmVkIGAudG1wYCBtaWdodCBtYXRjaCB0ZXh0IG1lc2ggcHJvKTtcXHJcXG4tIE5vIHRyYWNrZWQgZmlsZXMgdGhhdCB5b3UgZXhwZWN0ZWQgdG8gYmUgaWdub3JlZDtcXHJcXG4tIEFsbCBwYWNrYWdlcyBsaXN0ZWQ7XFxyXFxuLSBObyBwcmUtYnVpbGQgc3RlcHMgdGhhdCBjaGFuZ2UgeW91ciBwcm9qZWN0IGRpZmZlcmVudGx5IGZyb20gaG93IHRoYXQgaGFwcGVucyBsb2NhbGx5O1xcclxcblxcclxcbkEgZ29vZCB3YXkgdG8gdmVyaWZ5IHRoaXMsIGlzIHRvIChsb2NhbGx5KSBjbG9uZSB0aGUgVW5pdHkgcHJvamVjdCBpbiBhIG5ldyBmb2xkZXIgYW5kIHJ1biB0aGUgYnVpbGQgZnJvbSB0aGVyZS5cXHJcXG5cXHJcXG4jIyMgR3JhZGxlIGVycm9yXFxyXFxuXFxyXFxuIyMjIyBFcnJvclxcclxcblxcclxcbmBgYHBsYWludGV4dFxcclxcbkVycm9yOiAzLjY5MCBbRVJST1JdIFtvcmcuZ3JhZGxlLmxhdW5jaGVyLmRhZW1vbi5zZXJ2ZXIuRGFlbW9uU3RhdGVDb29yZGluYXRvcl0gQ29tbWFuZCBleGVjdXRpb246IHN0YXJ0ZWQgRGFlbW9uQ29tbWFuZEV4ZWN1dGlvbltjb21tYW5kID0gQnVpbGR7aWQ9NjlkYmQ1YjMtMTBmMi00ODhlLTg2NDAtOTc3ZGE2ODczM2Y5LCBjdXJyZW50RGlyPS9naXRodWIvd29ya3NwYWNlL1RlbXAvZ3JhZGxlT3V0L2xhdW5jaGVyfSwgY29ubmVjdGlvbiA9IERlZmF1bHREYWVtb25Db25uZWN0aW9uOiBzb2NrZXQgY29ubmVjdGlvbiBmcm9tIC8xMjcuMC4wLjE6MzM2NTcgdG8gLzEyNy4wLjAuMTo0Mzg2Nl0gYWZ0ZXIgMC4wIG1pbnV0ZXMgb2YgaWRsZVxcclxcbmBgYFxcclxcblxcclxcbiMjIyMgU29sdXRpb25cXHJcXG5cXHJcXG5UaGVyZSBhcmUgMiBwb3NzaWJsZSBzb2x1dGlvbnM6XFxyXFxuXFxyXFxuLSBSZW1vdmUgZW1vamlzIGZyb20gYWxsIGVudmlyb25tZW50IHZhcmlhYmxlcyAoYW5kIHRodXMgd29ya2Zsb3cgZmlsZXMpLCBvclxcclxcbi0gVXBncmFkZSB5b3VyIHByb2plY3QgYW5kIHdvcmtmbG93IHRvIHVzZSBVbml0eSBlZGl0b3IgdmVyc2lvbiAyMDIwLjIgb3IgbGF0ZXIuXFxyXFxuXFxyXFxuIyMgSSBjYW5ub3QgYWN0aXZhdGUgYmVjYXVzZVxcclxcblxcclxcbiMjIyAnTm9uLXdoaXRlc3BhY2UgYmVmb3JlIGZpcnN0IHRhZy4gTGluZTogMCBDb2x1bW46IDEgQ2hhcjog47y8JyBkdXJpbmcgbWFudWFsIGFjdGl2YXRpb25cXHJcXG5cXHJcXG5XaGVuIGFjdGl2YXRpbmcgYSBsaWNlbnNlIG9uIFtsaWNlbnNlLnVuaXR5M2QuY29tXShodHRwczovL2xpY2Vuc2UudW5pdHkzZC5jb20vKSwgeW91IG1heSBlbmNvdW50ZXIgdGhlIGZvbGxvd2luZyBlcnJvciBtZXNzYWdlOlxcclxcblxcclxcbj4gTm9uLXdoaXRlc3BhY2UgYmVmb3JlIGZpcnN0IHRhZy4gTGluZTogMCBDb2x1bW46IDEgQ2hhcjog47y8XFxyXFxuXFxyXFxuSGVyZSdzIFVuaXR5J3Mgd29ya2Fyb3VuZDpcXHJcXG5cXHJcXG4+IFVuZm9ydHVuYXRlbHksIHRoaXMgaXMgYSBrbm93biBpc3N1ZSBvdXIgZW5kLiBUaGUgcmVsZXZhbnQgdGVhbSBhcmUgaW4gdGhlIHByb2Nlc3Mgb2Ygd29ya2luZyBvbiBhIGZpeCBhcyB3ZSBzcGVhaywgaW4gdGhlIG1lYW50aW1lIHRoZXJlIGlzIGEgd29ya2Fyb3VuZC4gVHJ5IHJlbmFtaW5nIHRoZSBgYWxmYCBmaWxlIHdpdGggYSBjb21tYW5kIHRvIGNvbnZlcnQgY2hhcmFjdGVycyBvbiBpdCB3aXRoIGEgYGljb252YCBjb21tYW5kLlxcclxcblxcclxcbiMjIyMgU29sdXRpb25cXHJcXG5cXHJcXG5gYGBiYXNoXFxyXFxudmVyc2lvbj12MjAyMC4xLjEyZjEgIyB1cGRhdGUgdGhpcyBhY2NvcmRpbmcgdG8geW91ciB2ZXJzaW9uIGFuZCBmaWxlIG5hbWVcXHJcXG5pY29udiAtZiBVVEYtOCAtdCB1dGYtMTZCRSBVbml0eV8ke3ZlcnNpb259LmFsZiA+IFVuaXR5XyR7dmVyc2lvbn0udXRmMTZiZS5hbGZcXHJcXG5gYGBcXHJcXG5cXHJcXG4jIyMgSSB1c2UgbXkgZ29vZ2xlIGFjY291bnQgdG8gbG9naW4gdG8gVW5pdHksIGhvdyBkbyBJIGdldCBteSB1c2VybmFtZSBhbmQgcGFzc3dvcmQ/XFxyXFxuXFxyXFxuSWYgeW91IGFyZSB1c2luZyBnb29nbGUgYWNjb3VudCB5b3UgY2FuIGhhdmUgc29tZSBpc3N1ZSB3aXRoIGFjdGl2YXRpbmcgdW5pdHkuIFlvdSBqdXN0IG5lZWQgdG8gZ28gb24gdGhlIHVuaXR5IHdlYnNpdGUsIHNldHRpbmdzLCBzZWN1cml0eSBhbmQgY2hhbmdlIHlvdXIgcGFzc3dvcmQuIFRoZW4gdXNlIHlvdXIgZ29vZ2xlIGVtYWlsIGFuZCB5b3VyIG5ldyBwYXNzd29yZCBhbmQgaXQgd2lsbCB3b3JrIGp1c3QgZmluZSA7KVxcclxcblxcclxcbltTb3VyY2VdKGh0dHBzOi8vZ2l0bGFiLmNvbS9nYW1lLWNpL3VuaXR5M2QtZ2l0bGFiLWNpLWV4YW1wbGUvLS9pc3N1ZXMvMTQ5KVxcclxcblwiOyJdLCJzb3VyY2VSb290IjoiIn0=