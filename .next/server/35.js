exports.ids = [35];
exports.modules = {

/***/ "./docs/gitlab/custom-build-options.md":
/*!*********************************************!*\
  !*** ./docs/gitlab/custom-build-options.md ***!
  \*********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = ("# Custom build options\r\n\r\nFirst, you need to understand how build options are passed to the build.\r\n\r\n## Build command\r\n\r\nSee [Assets/Scripts/Editor/BuildCommand.cs](https://gitlab.com/game-ci/unity3d-gitlab-ci-example/-/blob/main/Assets/Scripts/Editor/BuildCommand.cs).\r\n\r\nThis is the script used during `Unity` command line execution. It is passed to the [`-executeMethod <ClassName.MethodName>` command line parameter](https://docs.unity3d.com/Manual/CommandLineArguments.html) like this:\r\n\r\n```bash\r\nunity-editor \\\r\n  # ...\r\n  -executeMethod BuildCommand.PerformBuild \\\r\n  # ...\r\n```\r\n\r\nYou need to have this file in your project in order to build your project in the CI.\r\n\r\n### Workflow file\r\n\r\nSee [.gitlab-ci.yml](https://gitlab.com/game-ci/unity3d-gitlab-ci-example/-/blob/main/.gitlab-ci.yml).\r\n\r\nYou can add `BuildOptions` per target by adding environment variable `BuildOptions`.\r\n\r\n```yaml\r\nbuild-ios-xcode:\r\n  <<: *build\r\n  image: $IMAGE:$UNITY_VERSION-ios-$IMAGE_VERSION\r\n  variables:\r\n    BUILD_TARGET: iOS\r\n    BuildOptions: AcceptExternalModificationsToPlayer\r\n```\r\n\r\nIf you would like to use several `BuildOptions`, you have to separate all values by `,`:\r\n\r\n```yaml\r\nBuildOptions: AcceptExternalModificationsToPlayer,CompressTextures,ConnectToHost\r\n```\r\n\r\nSee [Unity3d `BuildOptions` reference](https://docs.unity3d.com/ScriptReference/BuildOptions.html) for allowed values.\r\n");

/***/ })

};;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9kb2NzL2dpdGxhYi9jdXN0b20tYnVpbGQtb3B0aW9ucy5tZCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7OztBQUFBO0FBQWUsd2dEQUF5OEMsRSIsImZpbGUiOiIzNS5qcyIsInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBkZWZhdWx0IFwiIyBDdXN0b20gYnVpbGQgb3B0aW9uc1xcclxcblxcclxcbkZpcnN0LCB5b3UgbmVlZCB0byB1bmRlcnN0YW5kIGhvdyBidWlsZCBvcHRpb25zIGFyZSBwYXNzZWQgdG8gdGhlIGJ1aWxkLlxcclxcblxcclxcbiMjIEJ1aWxkIGNvbW1hbmRcXHJcXG5cXHJcXG5TZWUgW0Fzc2V0cy9TY3JpcHRzL0VkaXRvci9CdWlsZENvbW1hbmQuY3NdKGh0dHBzOi8vZ2l0bGFiLmNvbS9nYW1lLWNpL3VuaXR5M2QtZ2l0bGFiLWNpLWV4YW1wbGUvLS9ibG9iL21haW4vQXNzZXRzL1NjcmlwdHMvRWRpdG9yL0J1aWxkQ29tbWFuZC5jcykuXFxyXFxuXFxyXFxuVGhpcyBpcyB0aGUgc2NyaXB0IHVzZWQgZHVyaW5nIGBVbml0eWAgY29tbWFuZCBsaW5lIGV4ZWN1dGlvbi4gSXQgaXMgcGFzc2VkIHRvIHRoZSBbYC1leGVjdXRlTWV0aG9kIDxDbGFzc05hbWUuTWV0aG9kTmFtZT5gIGNvbW1hbmQgbGluZSBwYXJhbWV0ZXJdKGh0dHBzOi8vZG9jcy51bml0eTNkLmNvbS9NYW51YWwvQ29tbWFuZExpbmVBcmd1bWVudHMuaHRtbCkgbGlrZSB0aGlzOlxcclxcblxcclxcbmBgYGJhc2hcXHJcXG51bml0eS1lZGl0b3IgXFxcXFxcclxcbiAgIyAuLi5cXHJcXG4gIC1leGVjdXRlTWV0aG9kIEJ1aWxkQ29tbWFuZC5QZXJmb3JtQnVpbGQgXFxcXFxcclxcbiAgIyAuLi5cXHJcXG5gYGBcXHJcXG5cXHJcXG5Zb3UgbmVlZCB0byBoYXZlIHRoaXMgZmlsZSBpbiB5b3VyIHByb2plY3QgaW4gb3JkZXIgdG8gYnVpbGQgeW91ciBwcm9qZWN0IGluIHRoZSBDSS5cXHJcXG5cXHJcXG4jIyMgV29ya2Zsb3cgZmlsZVxcclxcblxcclxcblNlZSBbLmdpdGxhYi1jaS55bWxdKGh0dHBzOi8vZ2l0bGFiLmNvbS9nYW1lLWNpL3VuaXR5M2QtZ2l0bGFiLWNpLWV4YW1wbGUvLS9ibG9iL21haW4vLmdpdGxhYi1jaS55bWwpLlxcclxcblxcclxcbllvdSBjYW4gYWRkIGBCdWlsZE9wdGlvbnNgIHBlciB0YXJnZXQgYnkgYWRkaW5nIGVudmlyb25tZW50IHZhcmlhYmxlIGBCdWlsZE9wdGlvbnNgLlxcclxcblxcclxcbmBgYHlhbWxcXHJcXG5idWlsZC1pb3MteGNvZGU6XFxyXFxuICA8PDogKmJ1aWxkXFxyXFxuICBpbWFnZTogJElNQUdFOiRVTklUWV9WRVJTSU9OLWlvcy0kSU1BR0VfVkVSU0lPTlxcclxcbiAgdmFyaWFibGVzOlxcclxcbiAgICBCVUlMRF9UQVJHRVQ6IGlPU1xcclxcbiAgICBCdWlsZE9wdGlvbnM6IEFjY2VwdEV4dGVybmFsTW9kaWZpY2F0aW9uc1RvUGxheWVyXFxyXFxuYGBgXFxyXFxuXFxyXFxuSWYgeW91IHdvdWxkIGxpa2UgdG8gdXNlIHNldmVyYWwgYEJ1aWxkT3B0aW9uc2AsIHlvdSBoYXZlIHRvIHNlcGFyYXRlIGFsbCB2YWx1ZXMgYnkgYCxgOlxcclxcblxcclxcbmBgYHlhbWxcXHJcXG5CdWlsZE9wdGlvbnM6IEFjY2VwdEV4dGVybmFsTW9kaWZpY2F0aW9uc1RvUGxheWVyLENvbXByZXNzVGV4dHVyZXMsQ29ubmVjdFRvSG9zdFxcclxcbmBgYFxcclxcblxcclxcblNlZSBbVW5pdHkzZCBgQnVpbGRPcHRpb25zYCByZWZlcmVuY2VdKGh0dHBzOi8vZG9jcy51bml0eTNkLmNvbS9TY3JpcHRSZWZlcmVuY2UvQnVpbGRPcHRpb25zLmh0bWwpIGZvciBhbGxvd2VkIHZhbHVlcy5cXHJcXG5cIjsiXSwic291cmNlUm9vdCI6IiJ9