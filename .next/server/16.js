exports.ids = [16];
exports.modules = {

/***/ "./docs/docker/03-customize-docker-images.md":
/*!***************************************************!*\
  !*** ./docs/docker/03-customize-docker-images.md ***!
  \***************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = ("# Customize GameCI Unity Docker images\r\n\r\nSometimes, you will want to add tools to the existing unity docker images for specific needs. For example, in some projects, you might need Blender installed for unity to allow building a project with blender assets. Sometimes, you'll need some specific command lines or runtime that are used by unity in a _postprocess_ step. This documentation will guide you into building your own images on top of the existing ones to add your desired tools.\r\n\r\n## Example: Add Ruby to existing images\r\n\r\nIn the following example, we will be adding `Ruby` on top of the existing docker images (all unity components) for the `2021.1.16f1` unity version and GameCI's `0.15.0` version and publish them.\r\n\r\n### Build script\r\n\r\n`build.sh`\r\n\r\n```bash\r\n#!/usr/bin/env bash\r\n\r\nset -ex\r\n\r\nUNITY_VERSION=2021.1.16f1\r\nGAME_CI_VERSION=0.15.0 # https://github.com/game-ci/docker/releases\r\nMY_USERNAME=gableroux\r\n\r\n# don't hesitate to remove unused components from this list\r\ndeclare -a components=(\"android\" \"ios\" \"linux-il2cpp\" \"mac-mono\" \"webgl\" \"windows-mono\")\r\n\r\nfor component in \"${components[@]}\"\r\ndo\r\n  GAME_CI_UNITY_EDITOR_IMAGE=unityci/editor:ubuntu-${UNITY_VERSION}-${component}-${GAME_CI_VERSION}\r\n  IMAGE_TO_PUBLISH=${MY_USERNAME}/editor:ubuntu-${UNITY_VERSION}-${component}-${GAME_CI_VERSION}\r\n  docker build --build-arg GAME_CI_UNITY_EDITOR_IMAGE=${GAME_CI_UNITY_EDITOR_IMAGE} . -t ${IMAGE_TO_PUBLISH}\r\n# uncomment the following to publish the built images to docker hub\r\n#  docker push ${IMAGE_TO_PUBLISH}\r\ndone\r\n```\r\n\r\n### Dockerfile\r\n\r\n`Dockerfile`\r\n\r\n```dockerfile\r\n# initially inspired from https://github.com/drecom/docker-ubuntu-ruby/blob/master/Dockerfile\r\nARG RUBY_PATH=/usr/local/\r\nARG RUBY_VERSION=2.6.0\r\nARG GAME_CI_UNITY_EDITOR_IMAGE\r\n\r\n# build ruby\r\nFROM ubuntu:18.04 AS rubybuild\r\n\r\nRUN apt-get update \\\r\n&&  apt-get upgrade -y --force-yes \\\r\n&&  apt-get install -y --force-yes \\\r\n    libssl-dev \\\r\n    libreadline-dev \\\r\n    zlib1g-dev \\\r\n    wget \\\r\n    curl \\\r\n    git \\\r\n    build-essential \\\r\n&&  apt-get clean \\\r\n&&  rm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*\r\n\r\nARG RUBY_PATH\r\nARG RUBY_VERSION\r\nRUN git clone git://github.com/rbenv/ruby-build.git $RUBY_PATH/plugins/ruby-build \\\r\n&&  $RUBY_PATH/plugins/ruby-build/install.sh\r\nRUN ruby-build $RUBY_VERSION $RUBY_PATH\r\n\r\n# inject ruby and additional dependencies in game-ci's unity editor image\r\nFROM $GAME_CI_UNITY_EDITOR_IMAGE\r\n\r\nARG RUBY_PATH\r\nENV PATH $RUBY_PATH/bin:$PATH\r\nRUN apt-get update && \\\r\n    apt-get install -y \\\r\n        git \\\r\n        curl \\\r\n        gcc \\\r\n        make \\\r\n        libssl-dev \\\r\n        zlib1g-dev \\\r\n        libsqlite3-dev\r\nCOPY --from=rubybuild $RUBY_PATH $RUBY_PATH\r\n```\r\n\r\n### Usage example\r\n\r\nLocally, invoke the `build.sh` script (example on a unix system):\r\n\r\n```bash\r\nchmod +x build.sh\r\n./build.sh\r\n```\r\n\r\nAs a result, you will now have your own docker image with desired tools available during build time. To confirm `ruby` is correctly installed, we can invoke the command within the image we just built:\r\n\r\n```bash\r\ndocker run --rm -it gableroux/editor:ubuntu-2021.1.16f1-android-0.15.0 ruby --version\r\nruby 2.6.0p0 (2018-12-25 revision 66547) [x86_64-linux]\r\n```\r\n\r\nIf you are using [github-actions unity-builder](https://github.com/marketplace/actions/unity-builder) you can then customize the docker image used during build using [the customimage parameter](https://game.ci/docs/github/builder#customimage)\r\n\r\nFor more information on how to publish to docker hub, you may refer to [docker's documentation](https://docs.docker.com/docker-hub/repos/)\r\n");

/***/ })

};;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9kb2NzL2RvY2tlci8wMy1jdXN0b21pemUtZG9ja2VyLWltYWdlcy5tZCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7OztBQUFBO0FBQWUsNHNDQUE2b0MsY0FBYyxpRUFBaUUsY0FBYyxHQUFHLFVBQVUsR0FBRyxnQkFBZ0IseUJBQXlCLFlBQVksaUJBQWlCLGNBQWMsR0FBRyxVQUFVLEdBQUcsZ0JBQWdCLDREQUE0RCwyQkFBMkIsUUFBUSxpQkFBaUIsNEZBQTRGLGlCQUFpQiw4ckVBQThyRSxFIiwiZmlsZSI6IjE2LmpzIiwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGRlZmF1bHQgXCIjIEN1c3RvbWl6ZSBHYW1lQ0kgVW5pdHkgRG9ja2VyIGltYWdlc1xcclxcblxcclxcblNvbWV0aW1lcywgeW91IHdpbGwgd2FudCB0byBhZGQgdG9vbHMgdG8gdGhlIGV4aXN0aW5nIHVuaXR5IGRvY2tlciBpbWFnZXMgZm9yIHNwZWNpZmljIG5lZWRzLiBGb3IgZXhhbXBsZSwgaW4gc29tZSBwcm9qZWN0cywgeW91IG1pZ2h0IG5lZWQgQmxlbmRlciBpbnN0YWxsZWQgZm9yIHVuaXR5IHRvIGFsbG93IGJ1aWxkaW5nIGEgcHJvamVjdCB3aXRoIGJsZW5kZXIgYXNzZXRzLiBTb21ldGltZXMsIHlvdSdsbCBuZWVkIHNvbWUgc3BlY2lmaWMgY29tbWFuZCBsaW5lcyBvciBydW50aW1lIHRoYXQgYXJlIHVzZWQgYnkgdW5pdHkgaW4gYSBfcG9zdHByb2Nlc3NfIHN0ZXAuIFRoaXMgZG9jdW1lbnRhdGlvbiB3aWxsIGd1aWRlIHlvdSBpbnRvIGJ1aWxkaW5nIHlvdXIgb3duIGltYWdlcyBvbiB0b3Agb2YgdGhlIGV4aXN0aW5nIG9uZXMgdG8gYWRkIHlvdXIgZGVzaXJlZCB0b29scy5cXHJcXG5cXHJcXG4jIyBFeGFtcGxlOiBBZGQgUnVieSB0byBleGlzdGluZyBpbWFnZXNcXHJcXG5cXHJcXG5JbiB0aGUgZm9sbG93aW5nIGV4YW1wbGUsIHdlIHdpbGwgYmUgYWRkaW5nIGBSdWJ5YCBvbiB0b3Agb2YgdGhlIGV4aXN0aW5nIGRvY2tlciBpbWFnZXMgKGFsbCB1bml0eSBjb21wb25lbnRzKSBmb3IgdGhlIGAyMDIxLjEuMTZmMWAgdW5pdHkgdmVyc2lvbiBhbmQgR2FtZUNJJ3MgYDAuMTUuMGAgdmVyc2lvbiBhbmQgcHVibGlzaCB0aGVtLlxcclxcblxcclxcbiMjIyBCdWlsZCBzY3JpcHRcXHJcXG5cXHJcXG5gYnVpbGQuc2hgXFxyXFxuXFxyXFxuYGBgYmFzaFxcclxcbiMhL3Vzci9iaW4vZW52IGJhc2hcXHJcXG5cXHJcXG5zZXQgLWV4XFxyXFxuXFxyXFxuVU5JVFlfVkVSU0lPTj0yMDIxLjEuMTZmMVxcclxcbkdBTUVfQ0lfVkVSU0lPTj0wLjE1LjAgIyBodHRwczovL2dpdGh1Yi5jb20vZ2FtZS1jaS9kb2NrZXIvcmVsZWFzZXNcXHJcXG5NWV9VU0VSTkFNRT1nYWJsZXJvdXhcXHJcXG5cXHJcXG4jIGRvbid0IGhlc2l0YXRlIHRvIHJlbW92ZSB1bnVzZWQgY29tcG9uZW50cyBmcm9tIHRoaXMgbGlzdFxcclxcbmRlY2xhcmUgLWEgY29tcG9uZW50cz0oXFxcImFuZHJvaWRcXFwiIFxcXCJpb3NcXFwiIFxcXCJsaW51eC1pbDJjcHBcXFwiIFxcXCJtYWMtbW9ub1xcXCIgXFxcIndlYmdsXFxcIiBcXFwid2luZG93cy1tb25vXFxcIilcXHJcXG5cXHJcXG5mb3IgY29tcG9uZW50IGluIFxcXCIke2NvbXBvbmVudHNbQF19XFxcIlxcclxcbmRvXFxyXFxuICBHQU1FX0NJX1VOSVRZX0VESVRPUl9JTUFHRT11bml0eWNpL2VkaXRvcjp1YnVudHUtJHtVTklUWV9WRVJTSU9OfS0ke2NvbXBvbmVudH0tJHtHQU1FX0NJX1ZFUlNJT059XFxyXFxuICBJTUFHRV9UT19QVUJMSVNIPSR7TVlfVVNFUk5BTUV9L2VkaXRvcjp1YnVudHUtJHtVTklUWV9WRVJTSU9OfS0ke2NvbXBvbmVudH0tJHtHQU1FX0NJX1ZFUlNJT059XFxyXFxuICBkb2NrZXIgYnVpbGQgLS1idWlsZC1hcmcgR0FNRV9DSV9VTklUWV9FRElUT1JfSU1BR0U9JHtHQU1FX0NJX1VOSVRZX0VESVRPUl9JTUFHRX0gLiAtdCAke0lNQUdFX1RPX1BVQkxJU0h9XFxyXFxuIyB1bmNvbW1lbnQgdGhlIGZvbGxvd2luZyB0byBwdWJsaXNoIHRoZSBidWlsdCBpbWFnZXMgdG8gZG9ja2VyIGh1YlxcclxcbiMgIGRvY2tlciBwdXNoICR7SU1BR0VfVE9fUFVCTElTSH1cXHJcXG5kb25lXFxyXFxuYGBgXFxyXFxuXFxyXFxuIyMjIERvY2tlcmZpbGVcXHJcXG5cXHJcXG5gRG9ja2VyZmlsZWBcXHJcXG5cXHJcXG5gYGBkb2NrZXJmaWxlXFxyXFxuIyBpbml0aWFsbHkgaW5zcGlyZWQgZnJvbSBodHRwczovL2dpdGh1Yi5jb20vZHJlY29tL2RvY2tlci11YnVudHUtcnVieS9ibG9iL21hc3Rlci9Eb2NrZXJmaWxlXFxyXFxuQVJHIFJVQllfUEFUSD0vdXNyL2xvY2FsL1xcclxcbkFSRyBSVUJZX1ZFUlNJT049Mi42LjBcXHJcXG5BUkcgR0FNRV9DSV9VTklUWV9FRElUT1JfSU1BR0VcXHJcXG5cXHJcXG4jIGJ1aWxkIHJ1YnlcXHJcXG5GUk9NIHVidW50dToxOC4wNCBBUyBydWJ5YnVpbGRcXHJcXG5cXHJcXG5SVU4gYXB0LWdldCB1cGRhdGUgXFxcXFxcclxcbiYmICBhcHQtZ2V0IHVwZ3JhZGUgLXkgLS1mb3JjZS15ZXMgXFxcXFxcclxcbiYmICBhcHQtZ2V0IGluc3RhbGwgLXkgLS1mb3JjZS15ZXMgXFxcXFxcclxcbiAgICBsaWJzc2wtZGV2IFxcXFxcXHJcXG4gICAgbGlicmVhZGxpbmUtZGV2IFxcXFxcXHJcXG4gICAgemxpYjFnLWRldiBcXFxcXFxyXFxuICAgIHdnZXQgXFxcXFxcclxcbiAgICBjdXJsIFxcXFxcXHJcXG4gICAgZ2l0IFxcXFxcXHJcXG4gICAgYnVpbGQtZXNzZW50aWFsIFxcXFxcXHJcXG4mJiAgYXB0LWdldCBjbGVhbiBcXFxcXFxyXFxuJiYgIHJtIC1yZiAvdmFyL2NhY2hlL2FwdC9hcmNoaXZlcy8qIC92YXIvbGliL2FwdC9saXN0cy8qXFxyXFxuXFxyXFxuQVJHIFJVQllfUEFUSFxcclxcbkFSRyBSVUJZX1ZFUlNJT05cXHJcXG5SVU4gZ2l0IGNsb25lIGdpdDovL2dpdGh1Yi5jb20vcmJlbnYvcnVieS1idWlsZC5naXQgJFJVQllfUEFUSC9wbHVnaW5zL3J1YnktYnVpbGQgXFxcXFxcclxcbiYmICAkUlVCWV9QQVRIL3BsdWdpbnMvcnVieS1idWlsZC9pbnN0YWxsLnNoXFxyXFxuUlVOIHJ1YnktYnVpbGQgJFJVQllfVkVSU0lPTiAkUlVCWV9QQVRIXFxyXFxuXFxyXFxuIyBpbmplY3QgcnVieSBhbmQgYWRkaXRpb25hbCBkZXBlbmRlbmNpZXMgaW4gZ2FtZS1jaSdzIHVuaXR5IGVkaXRvciBpbWFnZVxcclxcbkZST00gJEdBTUVfQ0lfVU5JVFlfRURJVE9SX0lNQUdFXFxyXFxuXFxyXFxuQVJHIFJVQllfUEFUSFxcclxcbkVOViBQQVRIICRSVUJZX1BBVEgvYmluOiRQQVRIXFxyXFxuUlVOIGFwdC1nZXQgdXBkYXRlICYmIFxcXFxcXHJcXG4gICAgYXB0LWdldCBpbnN0YWxsIC15IFxcXFxcXHJcXG4gICAgICAgIGdpdCBcXFxcXFxyXFxuICAgICAgICBjdXJsIFxcXFxcXHJcXG4gICAgICAgIGdjYyBcXFxcXFxyXFxuICAgICAgICBtYWtlIFxcXFxcXHJcXG4gICAgICAgIGxpYnNzbC1kZXYgXFxcXFxcclxcbiAgICAgICAgemxpYjFnLWRldiBcXFxcXFxyXFxuICAgICAgICBsaWJzcWxpdGUzLWRldlxcclxcbkNPUFkgLS1mcm9tPXJ1YnlidWlsZCAkUlVCWV9QQVRIICRSVUJZX1BBVEhcXHJcXG5gYGBcXHJcXG5cXHJcXG4jIyMgVXNhZ2UgZXhhbXBsZVxcclxcblxcclxcbkxvY2FsbHksIGludm9rZSB0aGUgYGJ1aWxkLnNoYCBzY3JpcHQgKGV4YW1wbGUgb24gYSB1bml4IHN5c3RlbSk6XFxyXFxuXFxyXFxuYGBgYmFzaFxcclxcbmNobW9kICt4IGJ1aWxkLnNoXFxyXFxuLi9idWlsZC5zaFxcclxcbmBgYFxcclxcblxcclxcbkFzIGEgcmVzdWx0LCB5b3Ugd2lsbCBub3cgaGF2ZSB5b3VyIG93biBkb2NrZXIgaW1hZ2Ugd2l0aCBkZXNpcmVkIHRvb2xzIGF2YWlsYWJsZSBkdXJpbmcgYnVpbGQgdGltZS4gVG8gY29uZmlybSBgcnVieWAgaXMgY29ycmVjdGx5IGluc3RhbGxlZCwgd2UgY2FuIGludm9rZSB0aGUgY29tbWFuZCB3aXRoaW4gdGhlIGltYWdlIHdlIGp1c3QgYnVpbHQ6XFxyXFxuXFxyXFxuYGBgYmFzaFxcclxcbmRvY2tlciBydW4gLS1ybSAtaXQgZ2FibGVyb3V4L2VkaXRvcjp1YnVudHUtMjAyMS4xLjE2ZjEtYW5kcm9pZC0wLjE1LjAgcnVieSAtLXZlcnNpb25cXHJcXG5ydWJ5IDIuNi4wcDAgKDIwMTgtMTItMjUgcmV2aXNpb24gNjY1NDcpIFt4ODZfNjQtbGludXhdXFxyXFxuYGBgXFxyXFxuXFxyXFxuSWYgeW91IGFyZSB1c2luZyBbZ2l0aHViLWFjdGlvbnMgdW5pdHktYnVpbGRlcl0oaHR0cHM6Ly9naXRodWIuY29tL21hcmtldHBsYWNlL2FjdGlvbnMvdW5pdHktYnVpbGRlcikgeW91IGNhbiB0aGVuIGN1c3RvbWl6ZSB0aGUgZG9ja2VyIGltYWdlIHVzZWQgZHVyaW5nIGJ1aWxkIHVzaW5nIFt0aGUgY3VzdG9taW1hZ2UgcGFyYW1ldGVyXShodHRwczovL2dhbWUuY2kvZG9jcy9naXRodWIvYnVpbGRlciNjdXN0b21pbWFnZSlcXHJcXG5cXHJcXG5Gb3IgbW9yZSBpbmZvcm1hdGlvbiBvbiBob3cgdG8gcHVibGlzaCB0byBkb2NrZXIgaHViLCB5b3UgbWF5IHJlZmVyIHRvIFtkb2NrZXIncyBkb2N1bWVudGF0aW9uXShodHRwczovL2RvY3MuZG9ja2VyLmNvbS9kb2NrZXItaHViL3JlcG9zLylcXHJcXG5cIjsiXSwic291cmNlUm9vdCI6IiJ9