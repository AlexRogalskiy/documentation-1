{"ast":null,"code":"import _toArray from \"@babel/runtime/helpers/esm/toArray\";\nexport var capitalizeFirstLetter = function capitalizeFirstLetter(_ref) {\n  var _ref2 = _toArray(_ref),\n      first = _ref2[0],\n      rest = _ref2.slice(1);\n\n  var locale = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'en';\n\n  try {\n    return first.toLocaleUpperCase(locale) + rest.join('');\n  } catch (_unused) {\n    return first.toLocaleUpperCase(locale) + rest;\n  }\n};\nexport var replaceAll = function replaceAll(input, searchValue, replaceValue) {\n  return input.split(searchValue).join(replaceValue);\n};\nexport var normaliseTitle = function normaliseTitle(rawFileName) {\n  var fileName = replaceAll(rawFileName, '-', ' '); // For now this is the only exception, this could be made smarter later\n\n  if (fileName === 'ios') {\n    return 'iOS';\n  }\n\n  return capitalizeFirstLetter(fileName);\n};","map":null,"metadata":{},"sourceType":"module"}