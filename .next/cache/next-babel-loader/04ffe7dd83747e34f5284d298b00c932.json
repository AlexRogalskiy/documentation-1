{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Mark\\\\Documents\\\\documentation\\\\components\\\\markdown\\\\markdown-components.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* eslint-disable react/prop-types */\nimport { Divider } from 'antd';\nimport Blockquote from './components/blockquote';\nimport CodeBlock from './components/code-block';\nimport EmbeddedLinkOrParagraph from './components/embedded-link-or-paragraph';\nimport { List, ListItem } from './components/list';\nimport HeadingWithAnchor from './components/heading-with-anchor';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default {\n  table: 'table',\n  h1: (_ref) => {\n    let {\n      node,\n      children\n    } = _ref,\n        props = _objectWithoutProperties(_ref, [\"node\", \"children\"]);\n\n    return /*#__PURE__*/_jsxDEV(HeadingWithAnchor, _objectSpread(_objectSpread({\n      level: 1\n    }, props), {}, {\n      children: children\n    }), void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 5\n    }, this);\n  },\n  h2: (_ref2) => {\n    let {\n      node,\n      children\n    } = _ref2,\n        props = _objectWithoutProperties(_ref2, [\"node\", \"children\"]);\n\n    return /*#__PURE__*/_jsxDEV(HeadingWithAnchor, _objectSpread(_objectSpread({\n      level: 2\n    }, props), {}, {\n      children: children\n    }), void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 5\n    }, this);\n  },\n  h3: (_ref3) => {\n    let {\n      node,\n      children\n    } = _ref3,\n        props = _objectWithoutProperties(_ref3, [\"node\", \"children\"]);\n\n    return /*#__PURE__*/_jsxDEV(HeadingWithAnchor, _objectSpread(_objectSpread({\n      level: 3\n    }, props), {}, {\n      children: children\n    }), void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 5\n    }, this);\n  },\n  h4: (_ref4) => {\n    let {\n      node,\n      children\n    } = _ref4,\n        props = _objectWithoutProperties(_ref4, [\"node\", \"children\"]);\n\n    return /*#__PURE__*/_jsxDEV(HeadingWithAnchor, _objectSpread(_objectSpread({\n      level: 4\n    }, props), {}, {\n      children: children\n    }), void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 5\n    }, this);\n  },\n  h5: (_ref5) => {\n    let {\n      node,\n      children\n    } = _ref5,\n        props = _objectWithoutProperties(_ref5, [\"node\", \"children\"]);\n\n    return /*#__PURE__*/_jsxDEV(HeadingWithAnchor, _objectSpread(_objectSpread({\n      level: 5\n    }, props), {}, {\n      children: children\n    }), void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 5\n    }, this);\n  },\n  h6: (_ref6) => {\n    let {\n      node,\n      children\n    } = _ref6,\n        props = _objectWithoutProperties(_ref6, [\"node\", \"children\"]);\n\n    return /*#__PURE__*/_jsxDEV(HeadingWithAnchor, _objectSpread(_objectSpread({\n      level: 6\n    }, props), {}, {\n      children: children\n    }), void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 5\n    }, this);\n  },\n  p: EmbeddedLinkOrParagraph,\n  hr: Divider,\n  ol: (_ref7) => {\n    let {\n      node,\n      children\n    } = _ref7,\n        props = _objectWithoutProperties(_ref7, [\"node\", \"children\"]);\n\n    return /*#__PURE__*/_jsxDEV(List, _objectSpread(_objectSpread({}, props), {}, {\n      ordered: true,\n      children: children\n    }), void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 5\n    }, this);\n  },\n  ul: (_ref8) => {\n    let {\n      node,\n      children\n    } = _ref8,\n        props = _objectWithoutProperties(_ref8, [\"node\", \"children\"]);\n\n    return /*#__PURE__*/_jsxDEV(List, _objectSpread(_objectSpread({}, props), {}, {\n      children: children\n    }), void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 41\n    }, this);\n  },\n  li: ListItem,\n  code: (_ref9) => {\n    let {\n      node,\n      inline,\n      children\n    } = _ref9,\n        props = _objectWithoutProperties(_ref9, [\"node\", \"inline\", \"children\"]);\n\n    return inline ? /*#__PURE__*/_jsxDEV(\"code\", _objectSpread(_objectSpread({}, props), {}, {\n      children: children\n    }), void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 14\n    }, this) : /*#__PURE__*/_jsxDEV(CodeBlock, _objectSpread(_objectSpread({}, props), {}, {\n      children: children\n    }), void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 51\n    }, this);\n  },\n  // Created a custom pre element which checks if code element is embedded or not.\n  pre: ({\n    node,\n    children\n  }) => {\n    var _node$children;\n\n    if (((_node$children = node.children) === null || _node$children === void 0 ? void 0 : _node$children.length) === 1 && node.children[0].tagName === 'code') {\n      return children;\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"pre\", {\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 12\n    }, this);\n  },\n  blockquote: Blockquote\n};","map":{"version":3,"sources":["C:/Users/Mark/Documents/documentation/components/markdown/markdown-components.js"],"names":["Divider","Blockquote","CodeBlock","EmbeddedLinkOrParagraph","List","ListItem","HeadingWithAnchor","table","h1","node","children","props","h2","h3","h4","h5","h6","p","hr","ol","ul","li","code","inline","pre","length","tagName","blockquote"],"mappings":"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","sourcesContent":["/* eslint-disable react/prop-types */\nimport { Divider } from 'antd';\nimport Blockquote from './components/blockquote';\nimport CodeBlock from './components/code-block';\nimport EmbeddedLinkOrParagraph from './components/embedded-link-or-paragraph';\nimport { List, ListItem } from './components/list';\nimport HeadingWithAnchor from './components/heading-with-anchor';\n\nexport default {\n  table: 'table',\n  h1: ({ node, children, ...props }) => (\n    <HeadingWithAnchor level={1} {...props}>\n      {children}\n    </HeadingWithAnchor>\n  ),\n  h2: ({ node, children, ...props }) => (\n    <HeadingWithAnchor level={2} {...props}>\n      {children}\n    </HeadingWithAnchor>\n  ),\n  h3: ({ node, children, ...props }) => (\n    <HeadingWithAnchor level={3} {...props}>\n      {children}\n    </HeadingWithAnchor>\n  ),\n  h4: ({ node, children, ...props }) => (\n    <HeadingWithAnchor level={4} {...props}>\n      {children}\n    </HeadingWithAnchor>\n  ),\n  h5: ({ node, children, ...props }) => (\n    <HeadingWithAnchor level={5} {...props}>\n      {children}\n    </HeadingWithAnchor>\n  ),\n  h6: ({ node, children, ...props }) => (\n    <HeadingWithAnchor level={6} {...props}>\n      {children}\n    </HeadingWithAnchor>\n  ),\n  p: EmbeddedLinkOrParagraph,\n  hr: Divider,\n  ol: ({ node, children, ...props }) => (\n    <List {...props} ordered>\n      {children}\n    </List>\n  ),\n  ul: ({ node, children, ...props }) => <List {...props}>{children}</List>,\n  li: ListItem,\n  code: ({ node, inline, children, ...props }) =>\n    inline ? <code {...props}>{children}</code> : <CodeBlock {...props}>{children}</CodeBlock>,\n\n  // Created a custom pre element which checks if code element is embedded or not.\n  pre: ({ node, children }) => {\n    if (node.children?.length === 1 && node.children[0].tagName === 'code') {\n      return children;\n    }\n\n    return <pre>{children}</pre>;\n  },\n  blockquote: Blockquote,\n};\n"]},"metadata":{},"sourceType":"module"}