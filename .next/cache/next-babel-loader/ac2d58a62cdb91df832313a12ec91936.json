{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Mark\\\\Documents\\\\documentation\\\\components\\\\markdown\\\\markdown-renderer.tsx\",\n    _this = this;\n\nimport Article from '@/components/markdown/components/article';\nimport ReactMarkdown from 'react-markdown';\nimport PropTypes from 'prop-types';\nimport remarkToc from 'remark-toc';\nimport components from './markdown-components';\nimport EditOnGithubLink from '../pages/docs/edit-on-github-link';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar propTypes = {\n  document: PropTypes.string.isRequired,\n  meta: PropTypes.shape({\n    title: PropTypes.string,\n    date: PropTypes.string\n  }).isRequired\n};\n\nvar MarkdownRenderer = function MarkdownRenderer(_ref) {\n  var document = _ref.document,\n      meta = _ref.meta;\n  var _meta$title = meta.title,\n      title = _meta$title === void 0 ? '' : _meta$title,\n      _meta$date = meta.date,\n      date = _meta$date === void 0 ? '' : _meta$date;\n  var metaInformation = \"\".concat(date, \" - \").concat(title).replace(/(^\\s-\\s)|(\\s-\\s$)/, '');\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"sub\", {\n      children: metaInformation\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(Article, {\n      children: /*#__PURE__*/_jsxDEV(ReactMarkdown, {\n        components: components,\n        remarkPlugins: [remarkToc],\n        children: document\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(EditOnGithubLink, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, _this);\n};\n\n_c = MarkdownRenderer;\nMarkdownRenderer.propTypes = propTypes;\nexport default MarkdownRenderer;\n\nvar _c;\n\n$RefreshReg$(_c, \"MarkdownRenderer\");","map":{"version":3,"sources":["C:/Users/Mark/Documents/documentation/components/markdown/markdown-renderer.tsx"],"names":["Article","ReactMarkdown","PropTypes","remarkToc","components","EditOnGithubLink","propTypes","document","string","isRequired","meta","shape","title","date","MarkdownRenderer","metaInformation","replace"],"mappings":";;;AAAA,OAAOA,OAAP,MAAoB,0CAApB;AACA,OAAOC,aAAP,MAA0B,gBAA1B;AACA,OAAOC,SAAP,MAAsC,YAAtC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,UAAP,MAAuB,uBAAvB;AACA,OAAOC,gBAAP,MAA6B,mCAA7B;;AAEA,IAAMC,SAAS,GAAG;AAChBC,EAAAA,QAAQ,EAAEL,SAAS,CAACM,MAAV,CAAiBC,UADX;AAEhBC,EAAAA,IAAI,EAAER,SAAS,CAACS,KAAV,CAAgB;AAAEC,IAAAA,KAAK,EAAEV,SAAS,CAACM,MAAnB;AAA2BK,IAAAA,IAAI,EAAEX,SAAS,CAACM;AAA3C,GAAhB,EAAqEC;AAF3D,CAAlB;;AAKA,IAAMK,gBAAgB,GAAG,SAAnBA,gBAAmB,OAAsD;AAAA,MAAnDP,QAAmD,QAAnDA,QAAmD;AAAA,MAAzCG,IAAyC,QAAzCA,IAAyC;AAAA,oBAC3CA,IAD2C,CACrEE,KADqE;AAAA,MACrEA,KADqE,4BAC7D,EAD6D;AAAA,mBAC3CF,IAD2C,CACzDG,IADyD;AAAA,MACzDA,IADyD,2BAClD,EADkD;AAE7E,MAAME,eAAe,GAAG,UAAGF,IAAH,gBAAaD,KAAb,EAAqBI,OAArB,CAA6B,mBAA7B,EAAkD,EAAlD,CAAxB;AAEA,sBACE;AAAA,4BACE;AAAA,gBAAMD;AAAN;AAAA;AAAA;AAAA;AAAA,aADF,eAEE,QAAC,OAAD;AAAA,6BAEE,QAAC,aAAD;AAAe,QAAA,UAAU,EAAEX,UAA3B;AAAuC,QAAA,aAAa,EAAE,CAACD,SAAD,CAAtD;AAAA,kBACGI;AADH;AAAA;AAAA;AAAA;AAAA;AAFF;AAAA;AAAA;AAAA;AAAA,aAFF,eAQE,QAAC,gBAAD;AAAA;AAAA;AAAA;AAAA,aARF;AAAA;AAAA;AAAA;AAAA;AAAA,WADF;AAYD,CAhBD;;KAAMO,gB;AAkBNA,gBAAgB,CAACR,SAAjB,GAA6BA,SAA7B;AAEA,eAAeQ,gBAAf","sourcesContent":["import Article from '@/components/markdown/components/article';\nimport ReactMarkdown from 'react-markdown';\nimport PropTypes, { InferProps } from 'prop-types';\nimport remarkToc from 'remark-toc';\nimport components from './markdown-components';\nimport EditOnGithubLink from '../pages/docs/edit-on-github-link';\n\nconst propTypes = {\n  document: PropTypes.string.isRequired,\n  meta: PropTypes.shape({ title: PropTypes.string, date: PropTypes.string }).isRequired,\n};\n\nconst MarkdownRenderer = ({ document, meta }: InferProps<typeof propTypes>) => {\n  const { title = '', date = '' } = meta;\n  const metaInformation = `${date} - ${title}`.replace(/(^\\s-\\s)|(\\s-\\s$)/, '');\n\n  return (\n    <div>\n      <sub>{metaInformation}</sub>\n      <Article>\n        {/* @ts-ignore // todo - fix type properly */}\n        <ReactMarkdown components={components} remarkPlugins={[remarkToc]}>\n          {document}\n        </ReactMarkdown>\n      </Article>\n      <EditOnGithubLink />\n    </div>\n  );\n};\n\nMarkdownRenderer.propTypes = propTypes;\n\nexport default MarkdownRenderer;\n"]},"metadata":{},"sourceType":"module"}