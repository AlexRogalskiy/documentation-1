{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { MenuStructure } from '@/tools/menu/menu-structure';\nimport { createSlice } from '@reduxjs/toolkit';\nimport menuStructure from '@/core/menu-structure.json';\nexport var selectedVersionSlice = createSlice({\n  name: 'version',\n  initialState: _objectSpread({}, MenuStructure.getCurrentVersions(menuStructure)),\n  reducers: {\n    updateSelection: function updateSelection(state, action) {\n      var _action$payload = action.payload,\n          section = _action$payload.section,\n          selection = _action$payload.selection;\n      state[section] = selection;\n    }\n  }\n});\nexport var selectedVersionsSelector = function selectedVersionsSelector(state) {\n  return state.versions.selected;\n};\nvar updateSelection = selectedVersionSlice.actions.updateSelection;\nexport { updateSelection };","map":{"version":3,"sources":["C:/Users/Mark/Documents/documentation/logic/versions/selected-version-slice.ts"],"names":["MenuStructure","createSlice","menuStructure","selectedVersionSlice","name","initialState","getCurrentVersions","reducers","updateSelection","state","action","payload","section","selection","selectedVersionsSelector","versions","selected","actions"],"mappings":";;;;;;AAAA,SAASA,aAAT,QAA8B,6BAA9B;AACA,SAASC,WAAT,QAA4B,kBAA5B;AACA,OAAOC,aAAP,MAA0B,4BAA1B;AAEA,OAAO,IAAMC,oBAAoB,GAAGF,WAAW,CAAC;AAC9CG,EAAAA,IAAI,EAAE,SADwC;AAE9CC,EAAAA,YAAY,oBAAOL,aAAa,CAACM,kBAAd,CAAiCJ,aAAjC,CAAP,CAFkC;AAG9CK,EAAAA,QAAQ,EAAE;AACRC,IAAAA,eAAe,EAAE,yBAACC,KAAD,EAAQC,MAAR,EAAmB;AAAA,4BACHA,MAAM,CAACC,OADJ;AAAA,UAC1BC,OAD0B,mBAC1BA,OAD0B;AAAA,UACjBC,SADiB,mBACjBA,SADiB;AAGlCJ,MAAAA,KAAK,CAACG,OAAD,CAAL,GAAiBC,SAAjB;AACD;AALO;AAHoC,CAAD,CAAxC;AAYP,OAAO,IAAMC,wBAAwB,GAAG,SAA3BA,wBAA2B,CAACL,KAAD;AAAA,SAAWA,KAAK,CAACM,QAAN,CAAeC,QAA1B;AAAA,CAAjC;IAEQR,e,GAAoBL,oBAAoB,CAACc,O,CAAzCT,e","sourcesContent":["import { MenuStructure } from '@/tools/menu/menu-structure';\r\nimport { createSlice } from '@reduxjs/toolkit';\r\nimport menuStructure from '@/core/menu-structure.json';\r\n\r\nexport const selectedVersionSlice = createSlice({\r\n  name: 'version',\r\n  initialState: { ...MenuStructure.getCurrentVersions(menuStructure) },\r\n  reducers: {\r\n    updateSelection: (state, action) => {\r\n      const { section, selection } = action.payload;\r\n\r\n      state[section] = selection;\r\n    },\r\n  },\r\n});\r\n\r\nexport const selectedVersionsSelector = (state) => state.versions.selected;\r\n\r\nexport const { updateSelection } = selectedVersionSlice.actions;\r\n"]},"metadata":{},"sourceType":"module"}