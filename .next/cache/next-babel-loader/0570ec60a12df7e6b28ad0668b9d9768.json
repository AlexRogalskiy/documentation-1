{"ast":null,"code":"import { get, has } from 'lodash';\nimport { MenuSegment } from '@/tools/menu/menu-segment';\nexport class MenuNode {\n  static isFile(node) {\n    return get(node, 'meta.type') === 'file';\n  }\n\n  static isFolder(node) {\n    return get(node, 'meta.type') === 'folder';\n  }\n\n  static isPage(node) {\n    return this.isFile(node);\n  }\n\n  static isVersion(node) {\n    return get(node, 'meta.type') === 'version';\n  }\n\n  static hasChildren(node) {\n    return typeof node === 'object';\n  }\n\n  static hasVersionContainer(node) {\n    return has(node, MenuSegment.versionContainerIdentifier);\n  }\n\n  static getCurrentVersion(versionContainerNode) {\n    return get(versionContainerNode, 'meta.currentVersion');\n  }\n\n  static findFirstPage(menuNode) {\n    if (menuNode && MenuNode.isFolder(menuNode)) {\n      var _page$meta;\n\n      const page = MenuNode.findFirstPageInFolder(menuNode);\n      return (page === null || page === void 0 ? void 0 : (_page$meta = page.meta) === null || _page$meta === void 0 ? void 0 : _page$meta.path) || null;\n    }\n\n    return null;\n  }\n\n  static findFirstPageInFolder(menuNode) {\n    const fileMetas = [];\n    const containers = [];\n\n    for (const [segment, node] of Object.entries(menuNode)) {\n      if (MenuSegment.isMeta(segment)) continue;\n\n      if (MenuNode.isFile(node)) {\n        fileMetas.push(node);\n      }\n\n      if (MenuSegment.isVersionContainer(segment)) {\n        const currentVersion = this.getCurrentVersion(node);\n        containers.push(node[currentVersion]);\n      }\n\n      if (MenuNode.isFolder(node) || MenuNode.isVersion(node)) {\n        containers.push(node);\n      }\n    } // Todo sort by fileMeta.meta.order asc\n\n\n    if (fileMetas.length > 0) {\n      return fileMetas[0];\n    }\n\n    for (const container of containers) {\n      const result = this.findFirstPageInFolder(container);\n\n      if (result) {\n        return result;\n      }\n    }\n\n    return null;\n  }\n\n}","map":null,"metadata":{},"sourceType":"module"}