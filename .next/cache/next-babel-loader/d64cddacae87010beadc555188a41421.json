{"ast":null,"code":"import path from 'path';\nimport { writeFileSync } from 'fs';\nimport readFile from '@/core/fs/read-file';\nimport extractSections from './utils/extract-sections';\nexport default function generateSearchDefinitionsFromFiles(files) {\n  // eslint-disable-next-line no-console\n  console.log('event - generating search cache');\n  const cache = [];\n\n  for (const file of files) {\n    const {\n      meta\n    } = file;\n    const contents = readFile(path.resolve('docs/', meta.absolutePath));\n    const sections = extractSections(meta, contents);\n    cache.push(...sections);\n  }\n\n  writeFileSync(path.resolve('.search/sections.json'), JSON.stringify(cache), {\n    encoding: 'utf8'\n  });\n}","map":{"version":3,"sources":["C:/Users/Mark/Documents/documentation/tools/search/generate-definitions-from-files.ts"],"names":["path","writeFileSync","readFile","extractSections","generateSearchDefinitionsFromFiles","files","console","log","cache","file","meta","contents","resolve","absolutePath","sections","push","JSON","stringify","encoding"],"mappings":"AACA,OAAOA,IAAP,MAAiB,MAAjB;AACA,SAASC,aAAT,QAA8B,IAA9B;AACA,OAAOC,QAAP,MAAqB,qBAArB;AACA,OAAOC,eAAP,MAA4B,0BAA5B;AAEA,eAAe,SAASC,kCAAT,CAA4CC,KAA5C,EAA+D;AAC5E;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAY,iCAAZ;AAEA,QAAMC,KAAK,GAAG,EAAd;;AACA,OAAK,MAAMC,IAAX,IAAmBJ,KAAnB,EAA0B;AACxB,UAAM;AAAEK,MAAAA;AAAF,QAAWD,IAAjB;AAEA,UAAME,QAAQ,GAAGT,QAAQ,CAACF,IAAI,CAACY,OAAL,CAAa,OAAb,EAAsBF,IAAI,CAACG,YAA3B,CAAD,CAAzB;AACA,UAAMC,QAAQ,GAAGX,eAAe,CAACO,IAAD,EAAOC,QAAP,CAAhC;AAEAH,IAAAA,KAAK,CAACO,IAAN,CAAW,GAAGD,QAAd;AACD;;AAEDb,EAAAA,aAAa,CAACD,IAAI,CAACY,OAAL,CAAa,uBAAb,CAAD,EAAwCI,IAAI,CAACC,SAAL,CAAeT,KAAf,CAAxC,EAA+D;AAAEU,IAAAA,QAAQ,EAAE;AAAZ,GAA/D,CAAb;AACD","sourcesContent":["import { MenuNode } from '@/tools/menu/menu-node';\r\nimport path from 'path';\r\nimport { writeFileSync } from 'fs';\r\nimport readFile from '@/core/fs/read-file';\r\nimport extractSections from './utils/extract-sections';\r\n\r\nexport default function generateSearchDefinitionsFromFiles(files: MenuNode[]) {\r\n  // eslint-disable-next-line no-console\r\n  console.log('event - generating search cache');\r\n\r\n  const cache = [];\r\n  for (const file of files) {\r\n    const { meta } = file;\r\n\r\n    const contents = readFile(path.resolve('docs/', meta.absolutePath));\r\n    const sections = extractSections(meta, contents);\r\n\r\n    cache.push(...sections);\r\n  }\r\n\r\n  writeFileSync(path.resolve('.search/sections.json'), JSON.stringify(cache), { encoding: 'utf8' });\r\n}\r\n"]},"metadata":{},"sourceType":"module"}