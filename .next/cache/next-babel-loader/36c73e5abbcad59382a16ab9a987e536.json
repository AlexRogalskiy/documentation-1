{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Mark\\\\Documents\\\\documentation\\\\components\\\\search\\\\result.tsx\";\nimport { Tag } from 'antd';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Highlight } from 'react-instantsearch-dom';\nimport config from '@/core/config';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Result = ({\n  hit\n}) => {\n  const {\n    docsPath\n  } = config;\n  const {\n    path,\n    version,\n    anchorId\n  } = hit;\n  const permalink = `${docsPath}/${path}#${anchorId}`;\n  return /*#__PURE__*/_jsxDEV(\"article\", {\n    style: {\n      padding: 8\n    },\n    children: /*#__PURE__*/_jsxDEV(\"a\", {\n      href: permalink,\n      style: {\n        display: 'flex',\n        alignItems: 'center'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        style: {\n          flex: 1\n        },\n        children: /*#__PURE__*/_jsxDEV(Highlight, {\n          attribute: \"title\",\n          hit: hit,\n          tagName: \"em\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 9\n      }, this), version && /*#__PURE__*/_jsxDEV(Tag, {\n        style: {\n          lineHeight: '120%',\n          fontSize: '80%'\n        },\n        children: version\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }, this);\n};\n\nResult.propTypes = {\n  hit: PropTypes.shape({\n    title: PropTypes.string.isRequired,\n    path: PropTypes.string.isRequired,\n    anchorId: PropTypes.string,\n    version: PropTypes.string,\n    summary: PropTypes.string\n  }).isRequired\n};\nexport default Result;","map":{"version":3,"sources":["C:/Users/Mark/Documents/documentation/components/search/result.tsx"],"names":["Tag","React","PropTypes","Highlight","config","Result","hit","docsPath","path","version","anchorId","permalink","padding","display","alignItems","flex","lineHeight","fontSize","propTypes","shape","title","string","isRequired","summary"],"mappings":";AAAA,SAASA,GAAT,QAAoB,MAApB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,SAAT,QAA0B,yBAA1B;AACA,OAAOC,MAAP,MAAmB,eAAnB;;;AAEA,MAAMC,MAAM,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAa;AAC1B,QAAM;AAAEC,IAAAA;AAAF,MAAeH,MAArB;AACA,QAAM;AAAEI,IAAAA,IAAF;AAAQC,IAAAA,OAAR;AAAiBC,IAAAA;AAAjB,MAA8BJ,GAApC;AACA,QAAMK,SAAS,GAAI,GAAEJ,QAAS,IAAGC,IAAK,IAAGE,QAAS,EAAlD;AAEA,sBACE;AAAS,IAAA,KAAK,EAAE;AAAEE,MAAAA,OAAO,EAAE;AAAX,KAAhB;AAAA,2BACE;AAAG,MAAA,IAAI,EAAED,SAAT;AAAoB,MAAA,KAAK,EAAE;AAAEE,QAAAA,OAAO,EAAE,MAAX;AAAmBC,QAAAA,UAAU,EAAE;AAA/B,OAA3B;AAAA,8BACE;AAAM,QAAA,KAAK,EAAE;AAAEC,UAAAA,IAAI,EAAE;AAAR,SAAb;AAAA,+BACE,QAAC,SAAD;AAAW,UAAA,SAAS,EAAC,OAArB;AAA6B,UAAA,GAAG,EAAET,GAAlC;AAAuC,UAAA,OAAO,EAAC;AAA/C;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,EAIGG,OAAO,iBAAI,QAAC,GAAD;AAAK,QAAA,KAAK,EAAE;AAAEO,UAAAA,UAAU,EAAE,MAAd;AAAsBC,UAAAA,QAAQ,EAAE;AAAhC,SAAZ;AAAA,kBAAsDR;AAAtD;AAAA;AAAA;AAAA;AAAA,cAJd;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAUD,CAfD;;AAiBAJ,MAAM,CAACa,SAAP,GAAmB;AACjBZ,EAAAA,GAAG,EAAEJ,SAAS,CAACiB,KAAV,CAAgB;AACnBC,IAAAA,KAAK,EAAElB,SAAS,CAACmB,MAAV,CAAiBC,UADL;AAEnBd,IAAAA,IAAI,EAAEN,SAAS,CAACmB,MAAV,CAAiBC,UAFJ;AAGnBZ,IAAAA,QAAQ,EAAER,SAAS,CAACmB,MAHD;AAInBZ,IAAAA,OAAO,EAAEP,SAAS,CAACmB,MAJA;AAKnBE,IAAAA,OAAO,EAAErB,SAAS,CAACmB;AALA,GAAhB,EAMFC;AAPc,CAAnB;AAUA,eAAejB,MAAf","sourcesContent":["import { Tag } from 'antd';\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Highlight } from 'react-instantsearch-dom';\r\nimport config from '@/core/config';\r\n\r\nconst Result = ({ hit }) => {\r\n  const { docsPath } = config;\r\n  const { path, version, anchorId } = hit;\r\n  const permalink = `${docsPath}/${path}#${anchorId}`;\r\n\r\n  return (\r\n    <article style={{ padding: 8 }}>\r\n      <a href={permalink} style={{ display: 'flex', alignItems: 'center' }}>\r\n        <span style={{ flex: 1 }}>\r\n          <Highlight attribute=\"title\" hit={hit} tagName=\"em\" />\r\n        </span>\r\n        {version && <Tag style={{ lineHeight: '120%', fontSize: '80%' }}>{version}</Tag>}\r\n      </a>\r\n    </article>\r\n  );\r\n};\r\n\r\nResult.propTypes = {\r\n  hit: PropTypes.shape({\r\n    title: PropTypes.string.isRequired,\r\n    path: PropTypes.string.isRequired,\r\n    anchorId: PropTypes.string,\r\n    version: PropTypes.string,\r\n    summary: PropTypes.string,\r\n  }).isRequired,\r\n};\r\n\r\nexport default Result;\r\n"]},"metadata":{},"sourceType":"module"}