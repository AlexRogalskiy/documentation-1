{"ast":null,"code":"import React from 'react';\nimport { useAuth, useIdTokenResult, useUser } from 'reactfire'; // Apply fix while this is not merged https://github.com/FirebaseExtended/reactfire/pull/336\n\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport function SafeClaimsCheck({\n  user,\n  fallback,\n  children,\n  requiredClaims\n}) {\n  const {\n    data\n  } = useIdTokenResult(user, false, {\n    initialData: {\n      claims: {}\n    }\n  });\n  const {\n    claims\n  } = data;\n  const missingClaims = {};\n\n  if (requiredClaims) {\n    for (const claim of Object.keys(requiredClaims)) {\n      if (requiredClaims[claim] !== claims[claim]) {\n        missingClaims[claim] = {\n          expected: requiredClaims[claim],\n          actual: claims[claim]\n        };\n      }\n    }\n  }\n\n  return Object.keys(missingClaims).length === 0 ? /*#__PURE__*/_jsx(_Fragment, {\n    children: children\n  }) : /*#__PURE__*/_jsx(_Fragment, {\n    children: fallback\n  });\n} // Apply fix while this is not merged https://github.com/FirebaseExtended/reactfire/pull/336\n\nexport function SafeAuthCheck({\n  auth,\n  fallback,\n  children,\n  requiredClaims\n}) {\n  const {\n    data: user\n  } = useUser(auth);\n\n  if (user) {\n    return requiredClaims ? /*#__PURE__*/_jsx(SafeClaimsCheck, {\n      user: user,\n      fallback: fallback,\n      requiredClaims: requiredClaims,\n      children: children\n    }) : /*#__PURE__*/_jsx(_Fragment, {\n      children: children\n    });\n  }\n\n  return /*#__PURE__*/_jsx(_Fragment, {\n    children: fallback\n  });\n}\nexport function SimpleAuthCheck({\n  fallback,\n  children,\n  requiredClaims\n}) {\n  const auth = useAuth();\n  return /*#__PURE__*/_jsx(SafeAuthCheck, {\n    auth: auth,\n    fallback: fallback,\n    requiredClaims: requiredClaims,\n    children: children\n  });\n}","map":null,"metadata":{},"sourceType":"module"}