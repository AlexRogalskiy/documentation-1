{"ast":null,"code":"import path from 'path';\nimport { readdirSync } from 'fs';\nexport default function readDirectoryRecursively(directory, fileNames = [], currentDirectory = '') {\n  const directoryEntries = readdirSync(directory, {\n    withFileTypes: true\n  });\n\n  for (const entry of directoryEntries) {\n    const {\n      name\n    } = entry;\n\n    if (entry.isDirectory()) {\n      readDirectoryRecursively(path.resolve(directory, name), fileNames, `${currentDirectory}${name}/`);\n      continue;\n    }\n\n    if (entry.isFile()) {\n      fileNames.push(`${currentDirectory}${name}`);\n    }\n  }\n\n  return fileNames;\n}","map":{"version":3,"sources":["C:/Users/Mark/Documents/documentation/core/fs/read-directory-recursively.ts"],"names":["path","readdirSync","readDirectoryRecursively","directory","fileNames","currentDirectory","directoryEntries","withFileTypes","entry","name","isDirectory","resolve","isFile","push"],"mappings":"AAAA,OAAOA,IAAP,MAAiB,MAAjB;AACA,SAASC,WAAT,QAA4B,IAA5B;AAEA,eAAe,SAASC,wBAAT,CAAkCC,SAAlC,EAA6CC,SAAS,GAAG,EAAzD,EAA6DC,gBAAgB,GAAG,EAAhF,EAAoF;AACjG,QAAMC,gBAAgB,GAAGL,WAAW,CAACE,SAAD,EAAY;AAAEI,IAAAA,aAAa,EAAE;AAAjB,GAAZ,CAApC;;AAEA,OAAK,MAAMC,KAAX,IAAoBF,gBAApB,EAAsC;AACpC,UAAM;AAAEG,MAAAA;AAAF,QAAWD,KAAjB;;AACA,QAAIA,KAAK,CAACE,WAAN,EAAJ,EAAyB;AACvBR,MAAAA,wBAAwB,CACtBF,IAAI,CAACW,OAAL,CAAaR,SAAb,EAAwBM,IAAxB,CADsB,EAEtBL,SAFsB,EAGrB,GAAEC,gBAAiB,GAAEI,IAAK,GAHL,CAAxB;AAKA;AACD;;AAED,QAAID,KAAK,CAACI,MAAN,EAAJ,EAAoB;AAClBR,MAAAA,SAAS,CAACS,IAAV,CAAgB,GAAER,gBAAiB,GAAEI,IAAK,EAA1C;AACD;AACF;;AAED,SAAOL,SAAP;AACD","sourcesContent":["import path from 'path';\r\nimport { readdirSync } from 'fs';\r\n\r\nexport default function readDirectoryRecursively(directory, fileNames = [], currentDirectory = '') {\r\n  const directoryEntries = readdirSync(directory, { withFileTypes: true });\r\n\r\n  for (const entry of directoryEntries) {\r\n    const { name } = entry;\r\n    if (entry.isDirectory()) {\r\n      readDirectoryRecursively(\r\n        path.resolve(directory, name),\r\n        fileNames,\r\n        `${currentDirectory}${name}/`,\r\n      );\r\n      continue;\r\n    }\r\n\r\n    if (entry.isFile()) {\r\n      fileNames.push(`${currentDirectory}${name}`);\r\n    }\r\n  }\r\n\r\n  return fileNames;\r\n}\r\n"]},"metadata":{},"sourceType":"module"}