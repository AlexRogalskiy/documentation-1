{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport { MenuNode } from '@/tools/menu/menu-node';\nimport { MenuSegment } from '@/tools/menu/menu-segment';\nexport var MenuStructureParser = /*#__PURE__*/function () {\n  function MenuStructureParser() {\n    _classCallCheck(this, MenuStructureParser);\n  }\n\n  _createClass(MenuStructureParser, null, [{\n    key: \"getFileMetas\",\n    value: function getFileMetas(menuStructure) {\n      var fileMetas = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n\n      for (var _i = 0, _Object$entries = Object.entries(menuStructure); _i < _Object$entries.length; _i++) {\n        var _Object$entries$_i = _slicedToArray(_Object$entries[_i], 2),\n            segment = _Object$entries$_i[0],\n            node = _Object$entries$_i[1];\n\n        if (MenuSegment.isMeta(segment)) continue;\n\n        if (MenuNode.isFile(node)) {\n          fileMetas.push(node);\n        }\n\n        if (MenuNode.hasChildren(node)) {\n          this.getFileMetas(node, fileMetas);\n        }\n      }\n\n      return fileMetas;\n    }\n  }]);\n\n  return MenuStructureParser;\n}();","map":null,"metadata":{},"sourceType":"module"}