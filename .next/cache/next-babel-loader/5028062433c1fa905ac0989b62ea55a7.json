{"ast":null,"code":"import { SimpleAuthCheck } from '@/components/auth/safe-auth-check';\nimport DockerImageLink from '@/components/docs/versions/docker-image-link';\nimport { useAuthenticatedEndpoint } from '@/core/hooks/use-authenticated-endpoint';\nimport { useNotification } from '@/core/hooks/use-notification';\nimport { Tooltip } from 'antd';\nimport React, { useState } from 'react';\nimport { HiOutlineRefresh } from 'react-icons/all';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst DockerImageLinkOrRetryButton = ({\n  record\n}) => {\n  const {\n    buildInfo,\n    dockerInfo,\n    buildId,\n    relatedJobId\n  } = record;\n  const {\n    baseOs,\n    editorVersion,\n    targetPlatform,\n    repoVersion\n  } = buildInfo;\n  const {\n    imageRepo,\n    imageName\n  } = dockerInfo || {};\n  const imageTag = `${baseOs}-${editorVersion}-${targetPlatform}-${repoVersion}`;\n  const {\n    0: retryRequested,\n    1: setRetryRequested\n  } = useState(false);\n  const notify = useNotification();\n  const retryBuild = useAuthenticatedEndpoint('retryBuild', {\n    buildId,\n    relatedJobId\n  });\n\n  if (dockerInfo) {\n    return /*#__PURE__*/_jsx(DockerImageLink, {\n      imageRepo: imageRepo,\n      imageName: imageName,\n      imageTag: imageTag\n    });\n  }\n\n  const onClick = async () => {\n    try {\n      setRetryRequested(true);\n      const result = await retryBuild();\n      notify.success(result);\n    } catch (error) {\n      setRetryRequested(false);\n      notify.error(error);\n    }\n  };\n\n  return /*#__PURE__*/_jsx(SimpleAuthCheck, {\n    fallback: /*#__PURE__*/_jsx(\"span\", {}),\n    requiredClaims: {\n      admin: true\n    },\n    children: /*#__PURE__*/_jsx(Tooltip, {\n      title: `Delete tag \"${imageTag}\" then click this retry button.`,\n      children: /*#__PURE__*/_jsx(\"button\", {\n        type: \"button\",\n        onClick: onClick,\n        style: {\n          padding: 0,\n          border: 0,\n          outline: 0,\n          cursor: 'pointer'\n        },\n        children: /*#__PURE__*/_jsx(HiOutlineRefresh, {\n          color: retryRequested ? 'orange' : 'red'\n        })\n      })\n    })\n  });\n};\n\nexport default DockerImageLinkOrRetryButton;","map":null,"metadata":{},"sourceType":"module"}