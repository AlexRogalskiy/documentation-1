{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport CodeBlock from '@/components/markdown/components/code-block';\nimport Heading from '@/components/markdown/components/heading';\nimport React, { useReducer } from 'react';\nimport Article from '@/components/markdown/components/article';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar BuildFailureDetails = function BuildFailureDetails(_ref) {\n  var _useReducer2;\n\n  var ciJob = _ref.ciJob,\n      repoVersionInfo = _ref.repoVersionInfo,\n      editorVersionInfo = _ref.editorVersionInfo,\n      ciBuild = _ref.ciBuild,\n      rest = _objectWithoutProperties(_ref, [\"ciJob\", \"repoVersionInfo\", \"editorVersionInfo\", \"ciBuild\"]);\n\n  var _ciBuild$buildInfo = ciBuild.buildInfo,\n      editorVersion = _ciBuild$buildInfo.editorVersion,\n      baseOs = _ciBuild$buildInfo.baseOs,\n      targetPlatform = _ciBuild$buildInfo.targetPlatform;\n  var major = repoVersionInfo.major,\n      minor = repoVersionInfo.minor,\n      patch = repoVersionInfo.patch;\n\n  var reducer = function reducer(state, action) {\n    var tag = action.tag,\n        value = action.value;\n    return _objectSpread(_objectSpread({}, state), {}, _defineProperty({}, tag, value));\n  };\n\n  var _useReducer = useReducer(reducer, (_useReducer2 = {}, _defineProperty(_useReducer2, \"\".concat(baseOs, \"-\").concat(editorVersion, \"-\").concat(targetPlatform, \"-\").concat(major), '❓'), _defineProperty(_useReducer2, \"\".concat(baseOs, \"-\").concat(editorVersion, \"-\").concat(targetPlatform, \"-\").concat(major, \".\").concat(minor), '❓'), _defineProperty(_useReducer2, \"\".concat(baseOs, \"-\").concat(editorVersion, \"-\").concat(targetPlatform, \"-\").concat(major, \".\").concat(minor, \".\").concat(patch), '❓'), _defineProperty(_useReducer2, \"\".concat(editorVersion, \"-\").concat(targetPlatform, \"-\").concat(major), '❓'), _defineProperty(_useReducer2, \"\".concat(editorVersion, \"-\").concat(targetPlatform, \"-\").concat(major, \".\").concat(minor), '❓'), _defineProperty(_useReducer2, \"\".concat(editorVersion, \"-\").concat(targetPlatform, \"-\").concat(major, \".\").concat(minor, \".\").concat(patch), '❓'), _useReducer2)),\n      tags\n  /* , dispatch */\n  = _useReducer[0]; // Todo - fetch docker info from dockerhub for all tags, or do it on the server\n  // useEffect(() => {\n  //   (async () => {\n  //     const repo = 'unityci/editor';\n  //     for (const tag of Object.keys(tags)) {\n  //       const requestUrl = `https://index.docker.io/v1/repositories/${repo}/tags/${tag}`;\n  //       try {\n  //         const response = await fetch(requestUrl);\n  //         dispatch({ tag, value: response.status === 0 });\n  //       } catch (error) {\n  //         dispatch({ tag, value: false });\n  //       }\n  //     }\n  //   })();\n  // }, []);\n\n\n  var changeSet = editorVersionInfo.changeSet;\n  var command = \"docker build . --file ./editor/Dockerfile -t editor \" + \"--build-arg=version=\".concat(editorVersion, \" \") + \"--build-arg=changeSet=\".concat(changeSet, \" \") + \"--build-arg=module=\".concat(targetPlatform);\n  return /*#__PURE__*/_jsxs(Article, _objectSpread(_objectSpread({}, rest), {}, {\n    children: [/*#__PURE__*/_jsx(Heading, {\n      level: 4,\n      children: \"CI Job\"\n    }), /*#__PURE__*/_jsx(\"pre\", {\n      children: JSON.stringify(ciJob, null, 2)\n    }), /*#__PURE__*/_jsx(\"br\", {}), /*#__PURE__*/_jsx(Heading, {\n      level: 4,\n      children: \"Commands\"\n    }), /*#__PURE__*/_jsx(\"p\", {\n      children: \"To manually build for debugging:\"\n    }), /*#__PURE__*/_jsx(CodeBlock, {\n      language: \"powershell\",\n      children: [command]\n    }), /*#__PURE__*/_jsx(\"br\", {}), /*#__PURE__*/_jsx(Heading, {\n      level: 3,\n      children: \"Associated tags\"\n    }), /*#__PURE__*/_jsx(\"pre\", {\n      children: JSON.stringify(tags, null, 2)\n    }), /*#__PURE__*/_jsx(\"br\", {}), /*#__PURE__*/_jsx(Heading, {\n      level: 4,\n      children: \"CI Build\"\n    }), /*#__PURE__*/_jsx(\"pre\", {\n      children: JSON.stringify(ciBuild, null, 2)\n    })]\n  }));\n};\n\nexport default BuildFailureDetails;","map":null,"metadata":{},"sourceType":"module"}