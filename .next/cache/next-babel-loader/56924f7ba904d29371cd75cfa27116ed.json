{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { SimpleAuthCheck } from '@/components/auth/safe-auth-check';\nimport { useClipboard } from '@/core/hooks/use-clipboard';\nimport { useNotification } from '@/core/hooks/use-notification';\nimport React, { useState } from 'react';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nvar ShowAndCopyChangeSetHashButton = function ShowAndCopyChangeSetHashButton(_ref) {\n  var changeSet = _ref.changeSet;\n\n  var _useState = useState(false),\n      hoverHash = _useState[0],\n      setHoverHash = _useState[1];\n\n  var clipboard = useClipboard();\n  var notify = useNotification();\n\n  var onCopyChangeSet = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(event) {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              event.stopPropagation();\n              _context.next = 3;\n              return clipboard.write(changeSet, function () {\n                return notify.info({\n                  message: 'Change hash was copied'\n                });\n              });\n\n            case 3:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function onCopyChangeSet(_x) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  return /*#__PURE__*/_jsx(SimpleAuthCheck, {\n    fallback: /*#__PURE__*/_jsx(\"span\", {}),\n    requiredClaims: {\n      admin: true\n    },\n    children: /*#__PURE__*/_jsx(\"span\", {\n      style: {\n        opacity: hoverHash ? 0.9 : 0.5\n      },\n      children: /*#__PURE__*/_jsx(\"span\", {\n        style: {\n          opacity: 0.6\n        },\n        children: /*#__PURE__*/_jsx(\"button\", {\n          type: \"button\",\n          style: {\n            border: 0,\n            outline: 0,\n            cursor: 'pointer',\n            color: hoverHash ? 'blue' : 'inherit'\n          },\n          onMouseEnter: function onMouseEnter() {\n            return setHoverHash(true);\n          },\n          onMouseLeave: function onMouseLeave() {\n            return setHoverHash(false);\n          },\n          onClick: function onClick(event) {\n            return onCopyChangeSet(event);\n          },\n          children: changeSet\n        })\n      })\n    })\n  });\n};\n\nexport default ShowAndCopyChangeSetHashButton;","map":null,"metadata":{},"sourceType":"module"}