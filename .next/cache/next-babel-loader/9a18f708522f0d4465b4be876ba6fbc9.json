{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\Mark\\\\Documents\\\\documentation\\\\components\\\\markdown\\\\components\\\\code-block.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport * as hljs from 'highlight.js/lib/core';\nimport { Button } from 'antd'; // Icon for Copy Button\n\nimport { GrCopy } from 'react-icons/all';\nimport { useNotification } from '@/core/hooks/use-notification';\nimport styles from './markdown-components.module.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nhljs.registerLanguage('yaml', require('highlight.js/lib/languages/yaml'));\nhljs.registerLanguage('csharp', require('highlight.js/lib/languages/csharp'));\nhljs.registerLanguage('javascript', require('highlight.js/lib/languages/javascript'));\nhljs.registerLanguage('typescript', require('highlight.js/lib/languages/typescript'));\nhljs.registerLanguage('bash', require('highlight.js/lib/languages/bash'));\nhljs.registerLanguage('ruby', require('highlight.js/lib/languages/ruby'));\nhljs.registerLanguage('powershell', require('highlight.js/lib/languages/powershell'));\n\nvar CodeBlock = /*#__PURE__*/function (_React$PureComponent) {\n  _inherits(CodeBlock, _React$PureComponent);\n\n  var _super = _createSuper(CodeBlock);\n\n  function CodeBlock(properties) {\n    var _this;\n\n    _classCallCheck(this, CodeBlock);\n\n    _this = _super.call(this, properties);\n    _this.setRef = _this.setRef.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(CodeBlock, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.highlightCode();\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      this.highlightCode();\n    }\n  }, {\n    key: \"setRef\",\n    value: function setRef(element) {\n      this.codeEl = element;\n    }\n  }, {\n    key: \"highlightCode\",\n    value: function highlightCode() {\n      hljs.highlightBlock(this.codeEl);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          children = _this$props.children,\n          language = _this$props.language; // Add Styling to button here.\n      // TODO decide if the button should be left or right aligned.\n\n      var CopyButton = function CopyButton() {\n        var _s = $RefreshSig$();\n\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            position: 'absolute',\n            top: 8,\n            right: 8\n          },\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            onClick: _s(function () {\n              _s();\n\n              navigator.clipboard.writeText(children[0]);\n              useNotification().info({\n                message: 'Code Copied Successfully'\n              });\n            }, \"5Wvo13JDZyE5NG8yw+lSYQ3PyGg=\", false, function () {\n              return [useNotification];\n            }),\n            children: /*#__PURE__*/_jsxDEV(GrCopy, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 11\n            }, _this2)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 9\n          }, _this2)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 7\n        }, _this2);\n      };\n\n      return /*#__PURE__*/_jsxDEV(\"pre\", {\n        className: styles.codeBlock,\n        children: [/*#__PURE__*/_jsxDEV(CopyButton, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          ref: this.setRef,\n          className: \"language-\".concat(language),\n          children: children\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 7\n      }, this);\n    }\n  }]);\n\n  return CodeBlock;\n}(React.PureComponent);\n\nCodeBlock.defaultProps = {\n  language: ''\n};\nCodeBlock.propTypes = {\n  children: PropTypes.string.isRequired,\n  language: PropTypes.string\n};\nexport default CodeBlock;","map":{"version":3,"sources":["C:/Users/Mark/Documents/documentation/components/markdown/components/code-block.js"],"names":["React","PropTypes","hljs","Button","GrCopy","useNotification","styles","registerLanguage","require","CodeBlock","properties","setRef","bind","highlightCode","element","codeEl","highlightBlock","props","children","language","CopyButton","position","top","right","navigator","clipboard","writeText","info","message","codeBlock","PureComponent","defaultProps","propTypes","string","isRequired"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport * as hljs from 'highlight.js/lib/core';\r\n\r\nimport { Button } from 'antd';\r\n\r\n// Icon for Copy Button\r\nimport { GrCopy } from 'react-icons/all';\r\n\r\nimport { useNotification } from '@/core/hooks/use-notification';\r\nimport styles from './markdown-components.module.scss';\r\n\r\nhljs.registerLanguage('yaml', require('highlight.js/lib/languages/yaml'));\r\nhljs.registerLanguage('csharp', require('highlight.js/lib/languages/csharp'));\r\nhljs.registerLanguage('javascript', require('highlight.js/lib/languages/javascript'));\r\nhljs.registerLanguage('typescript', require('highlight.js/lib/languages/typescript'));\r\nhljs.registerLanguage('bash', require('highlight.js/lib/languages/bash'));\r\nhljs.registerLanguage('ruby', require('highlight.js/lib/languages/ruby'));\r\nhljs.registerLanguage('powershell', require('highlight.js/lib/languages/powershell'));\r\n\r\nclass CodeBlock extends React.PureComponent {\r\n  constructor(properties) {\r\n    super(properties);\r\n    this.setRef = this.setRef.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.highlightCode();\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    this.highlightCode();\r\n  }\r\n\r\n  setRef(element) {\r\n    this.codeEl = element;\r\n  }\r\n\r\n  highlightCode() {\r\n    hljs.highlightBlock(this.codeEl);\r\n  }\r\n\r\n  render() {\r\n    const { children, language } = this.props;\r\n\r\n    // Add Styling to button here.\r\n    // TODO decide if the button should be left or right aligned.\r\n    const CopyButton = () => (\r\n      <div\r\n        style={{\r\n          position: 'absolute',\r\n          top: 8,\r\n          right: 8,\r\n        }}\r\n      >\r\n        <Button\r\n          onClick={() => {\r\n            navigator.clipboard.writeText(children[0]);\r\n            useNotification().info({\r\n              message: 'Code Copied Successfully',\r\n            });\r\n          }}\r\n        >\r\n          <GrCopy />\r\n        </Button>\r\n      </div>\r\n    );\r\n\r\n    return (\r\n      <pre className={styles.codeBlock}>\r\n        <CopyButton />\r\n        <div ref={this.setRef} className={`language-${language}`}>\r\n          {children}\r\n        </div>\r\n      </pre>\r\n    );\r\n  }\r\n}\r\n\r\nCodeBlock.defaultProps = {\r\n  language: '',\r\n};\r\n\r\nCodeBlock.propTypes = {\r\n  children: PropTypes.string.isRequired,\r\n  language: PropTypes.string,\r\n};\r\n\r\nexport default CodeBlock;\r\n"]},"metadata":{},"sourceType":"module"}