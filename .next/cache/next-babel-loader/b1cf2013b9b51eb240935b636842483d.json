{"ast":null,"code":"import getConfig from 'next/config';\n/**\r\n * Returns an environment variable that is set during build time,\r\n * both on the server and in the browser.\r\n *\r\n * For a variable to show up in the browser, it needs to be defined in next.config.js under\r\n * the property `publicRuntimeConfig`.\r\n *\r\n * Notes:\r\n *   - This is a low level method, that should only be used in specific cases where the store has\r\n *     not yet been initialised, but the value is still required.\r\n *   - An empty string is only expected if this function is executed in the code path of a custom\r\n *     script outside of NextJS, thus not using next.config.js configuration.\r\n */\n\nexport var getIsomorphicValue = function getIsomorphicValue(variableName) {\n  var config = getConfig();\n  return config ? config.publicRuntimeConfig[variableName] : '';\n};","map":{"version":3,"sources":["C:/Users/Mark/Documents/documentation/tools/utils/get-isomorphic-value.ts"],"names":["getConfig","getIsomorphicValue","variableName","config","publicRuntimeConfig"],"mappings":"AAAA,OAAOA,SAAP,MAAsB,aAAtB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,IAAMC,kBAAkB,GAAG,SAArBA,kBAAqB,CAACC,YAAD,EAAkC;AAClE,MAAMC,MAAM,GAAGH,SAAS,EAAxB;AAEA,SAAOG,MAAM,GAAGA,MAAM,CAACC,mBAAP,CAA2BF,YAA3B,CAAH,GAA8C,EAA3D;AACD,CAJM","sourcesContent":["import getConfig from 'next/config';\r\n\r\n/**\r\n * Returns an environment variable that is set during build time,\r\n * both on the server and in the browser.\r\n *\r\n * For a variable to show up in the browser, it needs to be defined in next.config.js under\r\n * the property `publicRuntimeConfig`.\r\n *\r\n * Notes:\r\n *   - This is a low level method, that should only be used in specific cases where the store has\r\n *     not yet been initialised, but the value is still required.\r\n *   - An empty string is only expected if this function is executed in the code path of a custom\r\n *     script outside of NextJS, thus not using next.config.js configuration.\r\n */\r\nexport const getIsomorphicValue = (variableName: string): string => {\r\n  const config = getConfig();\r\n\r\n  return config ? config.publicRuntimeConfig[variableName] : '';\r\n};\r\n"]},"metadata":{},"sourceType":"module"}