{"ast":null,"code":"import _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Mark\\\\Documents\\\\documentation\\\\components\\\\pages\\\\docs\\\\menu\\\\versioned-title.tsx\",\n    _this = this,\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport { MenuNode } from '@/tools/menu/menu-node';\nimport { MenuSegment } from '@/tools/menu/menu-segment';\nimport React, { useContext } from 'react';\nimport { map } from 'lodash';\nimport { useDispatch, useSelector } from 'react-redux';\nimport MenuContext from '@/components/pages/docs/menu/menu-context';\nimport { selectedVersionsSelector, updateSelection } from '@/logic/versions/selected-version-slice';\nimport styles from './versioned-title.module.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar mapVersions = function mapVersions(section, collection, selectedOption) {\n  _s();\n\n  var dispatch = useDispatch();\n\n  var onChange = function onChange(event) {\n    return dispatch(updateSelection({\n      section: section,\n      selection: event.target.value\n    }));\n  };\n\n  var noPropagation = function noPropagation(event) {\n    return event.stopPropagation();\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: 'inline-block',\n      \"float\": 'right',\n      paddingRight: 4\n    },\n    children: /*#__PURE__*/_jsxDEV(\"select\", {\n      value: selectedOption,\n      className: styles.versionSelect,\n      onChange: onChange,\n      onClick: noPropagation,\n      children: map(Object.entries(collection), function (_ref) {\n        var _ref2 = _slicedToArray(_ref, 2),\n            segment = _ref2[0],\n            node = _ref2[1];\n\n        if (!MenuSegment.isVersionContainer(segment)) return null;\n\n        var meta = node.meta,\n            versions = _objectWithoutProperties(node, [\"meta\"]);\n\n        return map(Object.entries(versions), function (_ref3) {\n          var _ref4 = _slicedToArray(_ref3, 1),\n              version = _ref4[0];\n\n          return /*#__PURE__*/_jsxDEV(\"option\", {\n            value: version,\n            label: version\n          }, version, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 20\n          }, _this);\n        });\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(mapVersions, \"rgTLoBID190wEKCp9+G8W6F7A5M=\", false, function () {\n  return [useDispatch];\n});\n\nvar VersionedTitle = function VersionedTitle(_ref5) {\n  _s2();\n\n  var section = _ref5.section,\n      title = _ref5.title;\n\n  var _useContext = useContext(MenuContext),\n      menuStructure = _useContext.menuStructure;\n\n  var selected = useSelector(selectedVersionsSelector);\n  var docs = menuStructure.docs;\n\n  if (!MenuNode.hasVersionContainer(docs[section])) {\n    return title;\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"span\", {\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, _this), mapVersions(section, docs[section], selected[section])]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, _this);\n};\n\n_s2(VersionedTitle, \"AA6m9JrfkgJSnHH0Yj6yeX9sacg=\", false, function () {\n  return [useSelector];\n});\n\n_c = VersionedTitle;\nexport default VersionedTitle;\n\nvar _c;\n\n$RefreshReg$(_c, \"VersionedTitle\");","map":{"version":3,"sources":["C:/Users/Mark/Documents/documentation/components/pages/docs/menu/versioned-title.tsx"],"names":["MenuNode","MenuSegment","React","useContext","map","useDispatch","useSelector","MenuContext","selectedVersionsSelector","updateSelection","styles","mapVersions","section","collection","selectedOption","dispatch","onChange","event","selection","target","value","noPropagation","stopPropagation","display","paddingRight","versionSelect","Object","entries","segment","node","isVersionContainer","meta","versions","version","VersionedTitle","title","menuStructure","selected","docs","hasVersionContainer"],"mappings":"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","sourcesContent":["import { MenuNode } from '@/tools/menu/menu-node';\r\nimport { MenuSegment } from '@/tools/menu/menu-segment';\r\nimport React, { useContext } from 'react';\r\nimport { ReactNodeLike } from 'prop-types';\r\nimport { map } from 'lodash';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport MenuContext from '@/components/pages/docs/menu/menu-context';\r\nimport { selectedVersionsSelector, updateSelection } from '@/logic/versions/selected-version-slice';\r\n\r\nimport styles from './versioned-title.module.scss';\r\n\r\nconst mapVersions = (section, collection: MenuNode, selectedOption) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const onChange = (event) => dispatch(updateSelection({ section, selection: event.target.value }));\r\n  const noPropagation = (event) => event.stopPropagation();\r\n\r\n  return (\r\n    <div style={{ display: 'inline-block', float: 'right', paddingRight: 4 }}>\r\n      <select\r\n        value={selectedOption}\r\n        className={styles.versionSelect}\r\n        onChange={onChange}\r\n        onClick={noPropagation}\r\n      >\r\n        {map(Object.entries(collection), ([segment, node]) => {\r\n          if (!MenuSegment.isVersionContainer(segment)) return null;\r\n\r\n          const { meta, ...versions } = node;\r\n          return map(Object.entries(versions), ([version]) => {\r\n            return <option key={version} value={version} label={version} />;\r\n          });\r\n        })}\r\n      </select>\r\n    </div>\r\n  );\r\n};\r\n\r\ninterface Props {\r\n  section: string;\r\n  title: ReactNodeLike;\r\n}\r\n\r\nconst VersionedTitle = ({ section, title }: Props): any => {\r\n  const { menuStructure } = useContext(MenuContext);\r\n  const selected = useSelector(selectedVersionsSelector);\r\n  const { docs } = menuStructure;\r\n\r\n  if (!MenuNode.hasVersionContainer(docs[section])) {\r\n    return title;\r\n  }\r\n\r\n  return (\r\n    <span>\r\n      <span>{title}</span>\r\n      {mapVersions(section, docs[section], selected[section])}\r\n    </span>\r\n  );\r\n};\r\n\r\nexport default VersionedTitle;\r\n"]},"metadata":{},"sourceType":"module"}