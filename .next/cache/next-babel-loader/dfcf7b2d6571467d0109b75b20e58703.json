{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Mark\\\\Documents\\\\documentation\\\\components\\\\layout\\\\main\\\\breadcrumb.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { MenuNode } from '@/tools/menu/menu-node';\nimport { MenuSegment } from '@/tools/menu/menu-segment';\nimport { MenuStructure } from '@/tools/menu/menu-structure';\nimport Link from 'next/link';\nimport { Breadcrumb } from 'antd';\nimport { AiOutlineHome } from 'react-icons/all';\nimport usePathSegments from '@/core/routing/use-path-segments';\nimport MenuContext from '../../pages/docs/menu/menu-context';\nimport styles from './breadcrumb.module.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar Item = Breadcrumb.Item;\n\nvar BreadcrumbWrapper = function BreadcrumbWrapper() {\n  _s();\n\n  var segments = usePathSegments( /*#__PURE__*/_jsxDEV(AiOutlineHome, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 36\n  }, _this));\n\n  var _React$useContext = React.useContext(MenuContext),\n      menuStructure = _React$useContext.menuStructure;\n\n  return /*#__PURE__*/_jsxDEV(Breadcrumb, {\n    className: styles.breadCrumb,\n    children: segments.map(function (_ref) {\n      var url = _ref.url,\n          name = _ref.name;\n      if (MenuSegment.isVersion(name)) return null; // \"/\" is a segment too\n\n      if (typeof name !== 'string') return null; // If segment matches folder in generated menu-structure, determine its first page\n\n      var menuNode = MenuStructure.getNodeByUrl(menuStructure, url);\n      var nearestUrl = MenuNode.findFirstPage(menuNode);\n      var href = nearestUrl ? \"/docs/\".concat(nearestUrl) : url;\n      var capitalisedName = name.charAt(0).toUpperCase() + name.slice(1);\n      return /*#__PURE__*/_jsxDEV(Item, {\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          href: href,\n          children: /*#__PURE__*/_jsxDEV(\"a\", {\n            children: capitalisedName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 15\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 13\n        }, _this)\n      }, href, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 11\n      }, _this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(BreadcrumbWrapper, \"fUZE8FxBXG0fXd969gZHObg5LvI=\", false, function () {\n  return [usePathSegments];\n});\n\n_c = BreadcrumbWrapper;\nexport default BreadcrumbWrapper;\n\nvar _c;\n\n$RefreshReg$(_c, \"BreadcrumbWrapper\");","map":{"version":3,"sources":["C:/Users/Mark/Documents/documentation/components/layout/main/breadcrumb.js"],"names":["React","MenuNode","MenuSegment","MenuStructure","Link","Breadcrumb","AiOutlineHome","usePathSegments","MenuContext","styles","Item","BreadcrumbWrapper","segments","useContext","menuStructure","breadCrumb","map","url","name","isVersion","menuNode","getNodeByUrl","nearestUrl","findFirstPage","href","capitalisedName","charAt","toUpperCase","slice"],"mappings":";;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,wBAAzB;AACA,SAASC,WAAT,QAA4B,2BAA5B;AACA,SAASC,aAAT,QAA8B,6BAA9B;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,SAASC,UAAT,QAA2B,MAA3B;AACA,SAASC,aAAT,QAA8B,iBAA9B;AACA,OAAOC,eAAP,MAA4B,kCAA5B;AACA,OAAOC,WAAP,MAAwB,oCAAxB;AAEA,OAAOC,MAAP,MAAmB,0BAAnB;;IAEQC,I,GAASL,U,CAATK,I;;AAER,IAAMC,iBAAiB,GAAG,SAApBA,iBAAoB,GAAM;AAAA;;AAC9B,MAAMC,QAAQ,GAAGL,eAAe,eAAC,QAAC,aAAD;AAAA;AAAA;AAAA;AAAA,WAAD,CAAhC;;AAD8B,0BAEJP,KAAK,CAACa,UAAN,CAAiBL,WAAjB,CAFI;AAAA,MAEtBM,aAFsB,qBAEtBA,aAFsB;;AAI9B,sBACE,QAAC,UAAD;AAAY,IAAA,SAAS,EAAEL,MAAM,CAACM,UAA9B;AAAA,cACGH,QAAQ,CAACI,GAAT,CAAa,gBAAmB;AAAA,UAAhBC,GAAgB,QAAhBA,GAAgB;AAAA,UAAXC,IAAW,QAAXA,IAAW;AAC/B,UAAIhB,WAAW,CAACiB,SAAZ,CAAsBD,IAAtB,CAAJ,EAAiC,OAAO,IAAP,CADF,CAE/B;;AACA,UAAI,OAAOA,IAAP,KAAgB,QAApB,EAA8B,OAAO,IAAP,CAHC,CAK/B;;AACA,UAAME,QAAQ,GAAGjB,aAAa,CAACkB,YAAd,CAA2BP,aAA3B,EAA0CG,GAA1C,CAAjB;AACA,UAAMK,UAAU,GAAGrB,QAAQ,CAACsB,aAAT,CAAuBH,QAAvB,CAAnB;AACA,UAAMI,IAAI,GAAGF,UAAU,mBAAYA,UAAZ,IAA2BL,GAAlD;AACA,UAAMQ,eAAe,GAAGP,IAAI,CAACQ,MAAL,CAAY,CAAZ,EAAeC,WAAf,KAA+BT,IAAI,CAACU,KAAL,CAAW,CAAX,CAAvD;AAEA,0BACE,QAAC,IAAD;AAAA,+BACE,QAAC,IAAD;AAAM,UAAA,IAAI,EAAEJ,IAAZ;AAAA,iCACE;AAAA,sBAAIC;AAAJ;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF,SAAWD,IAAX;AAAA;AAAA;AAAA;AAAA,eADF;AAOD,KAlBA;AADH;AAAA;AAAA;AAAA;AAAA,WADF;AAuBD,CA3BD;;GAAMb,iB;UACaJ,e;;;KADbI,iB;AA6BN,eAAeA,iBAAf","sourcesContent":["import React from 'react';\r\nimport { MenuNode } from '@/tools/menu/menu-node';\r\nimport { MenuSegment } from '@/tools/menu/menu-segment';\r\nimport { MenuStructure } from '@/tools/menu/menu-structure';\r\nimport Link from 'next/link';\r\nimport { Breadcrumb } from 'antd';\r\nimport { AiOutlineHome } from 'react-icons/all';\r\nimport usePathSegments from '@/core/routing/use-path-segments';\r\nimport MenuContext from '../../pages/docs/menu/menu-context';\r\n\r\nimport styles from './breadcrumb.module.scss';\r\n\r\nconst { Item } = Breadcrumb;\r\n\r\nconst BreadcrumbWrapper = () => {\r\n  const segments = usePathSegments(<AiOutlineHome />);\r\n  const { menuStructure } = React.useContext(MenuContext);\r\n\r\n  return (\r\n    <Breadcrumb className={styles.breadCrumb}>\r\n      {segments.map(({ url, name }) => {\r\n        if (MenuSegment.isVersion(name)) return null;\r\n        // \"/\" is a segment too\r\n        if (typeof name !== 'string') return null;\r\n\r\n        // If segment matches folder in generated menu-structure, determine its first page\r\n        const menuNode = MenuStructure.getNodeByUrl(menuStructure, url);\r\n        const nearestUrl = MenuNode.findFirstPage(menuNode);\r\n        const href = nearestUrl ? `/docs/${nearestUrl}` : url;\r\n        const capitalisedName = name.charAt(0).toUpperCase() + name.slice(1);\r\n\r\n        return (\r\n          <Item key={href}>\r\n            <Link href={href}>\r\n              <a>{capitalisedName}</a>\r\n            </Link>\r\n          </Item>\r\n        );\r\n      })}\r\n    </Breadcrumb>\r\n  );\r\n};\r\n\r\nexport default BreadcrumbWrapper;\r\n"]},"metadata":{},"sourceType":"module"}