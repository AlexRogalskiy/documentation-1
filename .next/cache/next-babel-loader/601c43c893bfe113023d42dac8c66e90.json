{"ast":null,"code":"import React from 'react';\nimport { useAuth, useIdTokenResult, useUser } from 'reactfire'; // Apply fix while this is not merged https://github.com/FirebaseExtended/reactfire/pull/336\n\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport function SafeClaimsCheck(_ref) {\n  var user = _ref.user,\n      fallback = _ref.fallback,\n      children = _ref.children,\n      requiredClaims = _ref.requiredClaims;\n\n  var _useIdTokenResult = useIdTokenResult(user, false, {\n    initialData: {\n      claims: {}\n    }\n  }),\n      data = _useIdTokenResult.data;\n\n  var claims = data.claims;\n  var missingClaims = {};\n\n  if (requiredClaims) {\n    for (var _i = 0, _Object$keys = Object.keys(requiredClaims); _i < _Object$keys.length; _i++) {\n      var claim = _Object$keys[_i];\n\n      if (requiredClaims[claim] !== claims[claim]) {\n        missingClaims[claim] = {\n          expected: requiredClaims[claim],\n          actual: claims[claim]\n        };\n      }\n    }\n  }\n\n  return Object.keys(missingClaims).length === 0 ? /*#__PURE__*/_jsx(_Fragment, {\n    children: children\n  }) : /*#__PURE__*/_jsx(_Fragment, {\n    children: fallback\n  });\n} // Apply fix while this is not merged https://github.com/FirebaseExtended/reactfire/pull/336\n\nexport function SafeAuthCheck(_ref2) {\n  var auth = _ref2.auth,\n      fallback = _ref2.fallback,\n      children = _ref2.children,\n      requiredClaims = _ref2.requiredClaims;\n\n  var _useUser = useUser(auth),\n      user = _useUser.data;\n\n  if (user) {\n    return requiredClaims ? /*#__PURE__*/_jsx(SafeClaimsCheck, {\n      user: user,\n      fallback: fallback,\n      requiredClaims: requiredClaims,\n      children: children\n    }) : /*#__PURE__*/_jsx(_Fragment, {\n      children: children\n    });\n  }\n\n  return /*#__PURE__*/_jsx(_Fragment, {\n    children: fallback\n  });\n}\nexport function SimpleAuthCheck(_ref3) {\n  var fallback = _ref3.fallback,\n      children = _ref3.children,\n      requiredClaims = _ref3.requiredClaims;\n  var auth = useAuth();\n  return /*#__PURE__*/_jsx(SafeAuthCheck, {\n    auth: auth,\n    fallback: fallback,\n    requiredClaims: requiredClaims,\n    children: children\n  });\n}","map":null,"metadata":{},"sourceType":"module"}