{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport * as hljs from 'highlight.js/lib/core';\nimport { Button } from 'antd'; // Icon for Copy Button\n\nimport { GrCopy } from 'react-icons/all';\nimport { useNotification } from '@/core/hooks/use-notification';\nimport styles from './markdown-components.module.scss';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nhljs.registerLanguage('yaml', require('highlight.js/lib/languages/yaml'));\nhljs.registerLanguage('csharp', require('highlight.js/lib/languages/csharp'));\nhljs.registerLanguage('javascript', require('highlight.js/lib/languages/javascript'));\nhljs.registerLanguage('typescript', require('highlight.js/lib/languages/typescript'));\nhljs.registerLanguage('bash', require('highlight.js/lib/languages/bash'));\nhljs.registerLanguage('ruby', require('highlight.js/lib/languages/ruby'));\nhljs.registerLanguage('powershell', require('highlight.js/lib/languages/powershell'));\n\nvar CodeBlock = /*#__PURE__*/function (_React$PureComponent) {\n  _inherits(CodeBlock, _React$PureComponent);\n\n  var _super = _createSuper(CodeBlock);\n\n  function CodeBlock(properties) {\n    var _this;\n\n    _classCallCheck(this, CodeBlock);\n\n    _this = _super.call(this, properties);\n    _this.setRef = _this.setRef.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(CodeBlock, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.highlightCode();\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      this.highlightCode();\n    }\n  }, {\n    key: \"setRef\",\n    value: function setRef(element) {\n      this.codeEl = element;\n    }\n  }, {\n    key: \"highlightCode\",\n    value: function highlightCode() {\n      hljs.highlightBlock(this.codeEl);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          children = _this$props.children,\n          language = _this$props.language; // Add Styling to button here.\n      // TODO decide if the button should be left or right aligned.\n\n      var CopyButton = function CopyButton() {\n        return /*#__PURE__*/_jsx(\"div\", {\n          style: {\n            position: 'absolute',\n            top: 8,\n            right: 8\n          },\n          children: /*#__PURE__*/_jsx(Button, {\n            onClick: function onClick() {\n              navigator.clipboard.writeText(children[0]);\n              useNotification().info({\n                message: 'Code Copied Successfully'\n              });\n            },\n            children: /*#__PURE__*/_jsx(GrCopy, {})\n          })\n        });\n      };\n\n      return /*#__PURE__*/_jsxs(\"pre\", {\n        className: styles.codeBlock,\n        children: [/*#__PURE__*/_jsx(CopyButton, {}), /*#__PURE__*/_jsx(\"div\", {\n          ref: this.setRef,\n          className: \"language-\".concat(language),\n          children: children\n        })]\n      });\n    }\n  }]);\n\n  return CodeBlock;\n}(React.PureComponent);\n\nCodeBlock.defaultProps = {\n  language: ''\n};\nexport default CodeBlock;","map":null,"metadata":{},"sourceType":"module"}