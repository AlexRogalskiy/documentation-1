{"ast":null,"code":"import { useRouter } from 'next/router';\n\nconst usePathSegments = nameOfRootSegment => {\n  const {\n    asPath\n  } = useRouter();\n  const segments = asPath.slice(1).split('#')[0].split('/');\n  let url = '';\n  const pathSegments = segments.map(segment => {\n    url += `/${segment}`;\n    const name = segment.replace(/-/g, ' ');\n    return {\n      url,\n      name\n    };\n  });\n\n  if (nameOfRootSegment !== undefined) {\n    pathSegments.unshift({\n      url: '/',\n      name: nameOfRootSegment\n    });\n  }\n\n  return pathSegments;\n};\n\nexport default usePathSegments;","map":{"version":3,"sources":["C:/Users/Mark/Documents/documentation/core/routing/use-path-segments.js"],"names":["useRouter","usePathSegments","nameOfRootSegment","asPath","segments","slice","split","url","pathSegments","map","segment","name","replace","undefined","unshift"],"mappings":"AAAA,SAASA,SAAT,QAA0B,aAA1B;;AAEA,MAAMC,eAAe,GAAIC,iBAAD,IAAuB;AAC7C,QAAM;AAAEC,IAAAA;AAAF,MAAaH,SAAS,EAA5B;AACA,QAAMI,QAAQ,GAAGD,MAAM,CAACE,KAAP,CAAa,CAAb,EAAgBC,KAAhB,CAAsB,GAAtB,EAA2B,CAA3B,EAA8BA,KAA9B,CAAoC,GAApC,CAAjB;AAEA,MAAIC,GAAG,GAAG,EAAV;AACA,QAAMC,YAAY,GAAGJ,QAAQ,CAACK,GAAT,CAAcC,OAAD,IAAa;AAC7CH,IAAAA,GAAG,IAAK,IAAGG,OAAQ,EAAnB;AACA,UAAMC,IAAI,GAAGD,OAAO,CAACE,OAAR,CAAgB,IAAhB,EAAsB,GAAtB,CAAb;AAEA,WAAO;AAAEL,MAAAA,GAAF;AAAOI,MAAAA;AAAP,KAAP;AACD,GALoB,CAArB;;AAOA,MAAIT,iBAAiB,KAAKW,SAA1B,EAAqC;AACnCL,IAAAA,YAAY,CAACM,OAAb,CAAqB;AAAEP,MAAAA,GAAG,EAAE,GAAP;AAAYI,MAAAA,IAAI,EAAET;AAAlB,KAArB;AACD;;AAED,SAAOM,YAAP;AACD,CAjBD;;AAmBA,eAAeP,eAAf","sourcesContent":["import { useRouter } from 'next/router';\r\n\r\nconst usePathSegments = (nameOfRootSegment) => {\r\n  const { asPath } = useRouter();\r\n  const segments = asPath.slice(1).split('#')[0].split('/');\r\n\r\n  let url = '';\r\n  const pathSegments = segments.map((segment) => {\r\n    url += `/${segment}`;\r\n    const name = segment.replace(/-/g, ' ');\r\n\r\n    return { url, name };\r\n  });\r\n\r\n  if (nameOfRootSegment !== undefined) {\r\n    pathSegments.unshift({ url: '/', name: nameOfRootSegment });\r\n  }\r\n\r\n  return pathSegments;\r\n};\r\n\r\nexport default usePathSegments;\r\n"]},"metadata":{},"sourceType":"module"}