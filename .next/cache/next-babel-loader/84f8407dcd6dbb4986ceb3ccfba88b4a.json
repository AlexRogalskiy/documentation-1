{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Mark\\\\Documents\\\\documentation\\\\components\\\\pages\\\\docs\\\\menu\\\\versioned-title.tsx\";\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport { MenuNode } from '@/tools/menu/menu-node';\nimport { MenuSegment } from '@/tools/menu/menu-segment';\nimport React, { useContext } from 'react';\nimport { map } from 'lodash';\nimport { useDispatch, useSelector } from 'react-redux';\nimport MenuContext from '@/components/pages/docs/menu/menu-context';\nimport { selectedVersionsSelector, updateSelection } from '@/logic/versions/selected-version-slice';\nimport styles from './versioned-title.module.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst mapVersions = (section, collection, selectedOption) => {\n  const dispatch = useDispatch();\n\n  const onChange = event => dispatch(updateSelection({\n    section,\n    selection: event.target.value\n  }));\n\n  const noPropagation = event => event.stopPropagation();\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: 'inline-block',\n      float: 'right',\n      paddingRight: 4\n    },\n    children: /*#__PURE__*/_jsxDEV(\"select\", {\n      value: selectedOption,\n      className: styles.versionSelect,\n      onChange: onChange,\n      onClick: noPropagation,\n      children: map(Object.entries(collection), ([segment, node]) => {\n        if (!MenuSegment.isVersionContainer(segment)) return null;\n\n        const {\n          meta\n        } = node,\n              versions = _objectWithoutProperties(node, [\"meta\"]);\n\n        return map(Object.entries(versions), ([version]) => {\n          return /*#__PURE__*/_jsxDEV(\"option\", {\n            value: version,\n            label: version\n          }, version, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 20\n          }, this);\n        });\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n};\n\nconst VersionedTitle = ({\n  section,\n  title\n}) => {\n  const {\n    menuStructure\n  } = useContext(MenuContext);\n  const selected = useSelector(selectedVersionsSelector);\n  const {\n    docs\n  } = menuStructure;\n\n  if (!MenuNode.hasVersionContainer(docs[section])) {\n    return title;\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"span\", {\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), mapVersions(section, docs[section], selected[section])]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n};\n\nexport default VersionedTitle;","map":{"version":3,"sources":["C:/Users/Mark/Documents/documentation/components/pages/docs/menu/versioned-title.tsx"],"names":["MenuNode","MenuSegment","React","useContext","map","useDispatch","useSelector","MenuContext","selectedVersionsSelector","updateSelection","styles","mapVersions","section","collection","selectedOption","dispatch","onChange","event","selection","target","value","noPropagation","stopPropagation","display","float","paddingRight","versionSelect","Object","entries","segment","node","isVersionContainer","meta","versions","version","VersionedTitle","title","menuStructure","selected","docs","hasVersionContainer"],"mappings":";;;;;;AAAA,SAASA,QAAT,QAAyB,wBAAzB;AACA,SAASC,WAAT,QAA4B,2BAA5B;AACA,OAAOC,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AAEA,SAASC,GAAT,QAAoB,QAApB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,OAAOC,WAAP,MAAwB,2CAAxB;AACA,SAASC,wBAAT,EAAmCC,eAAnC,QAA0D,yCAA1D;AAEA,OAAOC,MAAP,MAAmB,+BAAnB;;;AAEA,MAAMC,WAAW,GAAG,CAACC,OAAD,EAAUC,UAAV,EAAgCC,cAAhC,KAAmD;AACrE,QAAMC,QAAQ,GAAGV,WAAW,EAA5B;;AAEA,QAAMW,QAAQ,GAAIC,KAAD,IAAWF,QAAQ,CAACN,eAAe,CAAC;AAAEG,IAAAA,OAAF;AAAWM,IAAAA,SAAS,EAAED,KAAK,CAACE,MAAN,CAAaC;AAAnC,GAAD,CAAhB,CAApC;;AACA,QAAMC,aAAa,GAAIJ,KAAD,IAAWA,KAAK,CAACK,eAAN,EAAjC;;AAEA,sBACE;AAAK,IAAA,KAAK,EAAE;AAAEC,MAAAA,OAAO,EAAE,cAAX;AAA2BC,MAAAA,KAAK,EAAE,OAAlC;AAA2CC,MAAAA,YAAY,EAAE;AAAzD,KAAZ;AAAA,2BACE;AACE,MAAA,KAAK,EAAEX,cADT;AAEE,MAAA,SAAS,EAAEJ,MAAM,CAACgB,aAFpB;AAGE,MAAA,QAAQ,EAAEV,QAHZ;AAIE,MAAA,OAAO,EAAEK,aAJX;AAAA,gBAMGjB,GAAG,CAACuB,MAAM,CAACC,OAAP,CAAef,UAAf,CAAD,EAA6B,CAAC,CAACgB,OAAD,EAAUC,IAAV,CAAD,KAAqB;AACpD,YAAI,CAAC7B,WAAW,CAAC8B,kBAAZ,CAA+BF,OAA/B,CAAL,EAA8C,OAAO,IAAP;;AAE9C,cAAM;AAAEG,UAAAA;AAAF,YAAwBF,IAA9B;AAAA,cAAiBG,QAAjB,4BAA8BH,IAA9B;;AACA,eAAO1B,GAAG,CAACuB,MAAM,CAACC,OAAP,CAAeK,QAAf,CAAD,EAA2B,CAAC,CAACC,OAAD,CAAD,KAAe;AAClD,8BAAO;AAAsB,YAAA,KAAK,EAAEA,OAA7B;AAAsC,YAAA,KAAK,EAAEA;AAA7C,aAAaA,OAAb;AAAA;AAAA;AAAA;AAAA,kBAAP;AACD,SAFS,CAAV;AAGD,OAPG;AANN;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAmBD,CAzBD;;AAgCA,MAAMC,cAAc,GAAG,CAAC;AAAEvB,EAAAA,OAAF;AAAWwB,EAAAA;AAAX,CAAD,KAAoC;AACzD,QAAM;AAAEC,IAAAA;AAAF,MAAoBlC,UAAU,CAACI,WAAD,CAApC;AACA,QAAM+B,QAAQ,GAAGhC,WAAW,CAACE,wBAAD,CAA5B;AACA,QAAM;AAAE+B,IAAAA;AAAF,MAAWF,aAAjB;;AAEA,MAAI,CAACrC,QAAQ,CAACwC,mBAAT,CAA6BD,IAAI,CAAC3B,OAAD,CAAjC,CAAL,EAAkD;AAChD,WAAOwB,KAAP;AACD;;AAED,sBACE;AAAA,4BACE;AAAA,gBAAOA;AAAP;AAAA;AAAA;AAAA;AAAA,YADF,EAEGzB,WAAW,CAACC,OAAD,EAAU2B,IAAI,CAAC3B,OAAD,CAAd,EAAyB0B,QAAQ,CAAC1B,OAAD,CAAjC,CAFd;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAMD,CAfD;;AAiBA,eAAeuB,cAAf","sourcesContent":["import { MenuNode } from '@/tools/menu/menu-node';\r\nimport { MenuSegment } from '@/tools/menu/menu-segment';\r\nimport React, { useContext } from 'react';\r\nimport { ReactNodeLike } from 'prop-types';\r\nimport { map } from 'lodash';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport MenuContext from '@/components/pages/docs/menu/menu-context';\r\nimport { selectedVersionsSelector, updateSelection } from '@/logic/versions/selected-version-slice';\r\n\r\nimport styles from './versioned-title.module.scss';\r\n\r\nconst mapVersions = (section, collection: MenuNode, selectedOption) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const onChange = (event) => dispatch(updateSelection({ section, selection: event.target.value }));\r\n  const noPropagation = (event) => event.stopPropagation();\r\n\r\n  return (\r\n    <div style={{ display: 'inline-block', float: 'right', paddingRight: 4 }}>\r\n      <select\r\n        value={selectedOption}\r\n        className={styles.versionSelect}\r\n        onChange={onChange}\r\n        onClick={noPropagation}\r\n      >\r\n        {map(Object.entries(collection), ([segment, node]) => {\r\n          if (!MenuSegment.isVersionContainer(segment)) return null;\r\n\r\n          const { meta, ...versions } = node;\r\n          return map(Object.entries(versions), ([version]) => {\r\n            return <option key={version} value={version} label={version} />;\r\n          });\r\n        })}\r\n      </select>\r\n    </div>\r\n  );\r\n};\r\n\r\ninterface Props {\r\n  section: string;\r\n  title: ReactNodeLike;\r\n}\r\n\r\nconst VersionedTitle = ({ section, title }: Props): any => {\r\n  const { menuStructure } = useContext(MenuContext);\r\n  const selected = useSelector(selectedVersionsSelector);\r\n  const { docs } = menuStructure;\r\n\r\n  if (!MenuNode.hasVersionContainer(docs[section])) {\r\n    return title;\r\n  }\r\n\r\n  return (\r\n    <span>\r\n      <span>{title}</span>\r\n      {mapVersions(section, docs[section], selected[section])}\r\n    </span>\r\n  );\r\n};\r\n\r\nexport default VersionedTitle;\r\n"]},"metadata":{},"sourceType":"module"}