{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n/* eslint-disable react/prop-types */\nimport { Typography } from 'antd';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar Paragraph = Typography.Paragraph;\n\nvar EmbeddedLink = /*#__PURE__*/function () {\n  function EmbeddedLink() {\n    _classCallCheck(this, EmbeddedLink);\n  }\n\n  _createClass(EmbeddedLink, null, [{\n    key: \"fromChildren\",\n    value: function fromChildren(children) {\n      if (children.length === 1) {\n        var potentialLink = children[0];\n\n        if (typeof potentialLink === 'string' && potentialLink.startsWith('https://')) {\n          return potentialLink;\n        }\n      }\n\n      return null;\n    }\n  }, {\n    key: \"isYoutubeLink\",\n    value: function isYoutubeLink(link) {\n      // Starts with youtube\n      if (/^https:\\/\\/www\\.youtube(-nocookie)?\\.com/.test(link)) {\n        // Url as expected\n        if (!/^https:\\/\\/www\\.youtube-nocookie\\.com\\/embed\\/.+$/.test(link)) {\n          throw new Error(\"Found youtube link, but it is malformed.\\n        expected format: \\\"https://www.youtube-nocookie.com/embed/XXXXXXXXXX\\\"\\n        but received: \\\"\".concat(link, \"\\\"\"));\n        }\n\n        return true;\n      }\n\n      return false;\n    }\n  }]);\n\n  return EmbeddedLink;\n}();\n\nvar EmbeddedLinkOrParagraph = function EmbeddedLinkOrParagraph(_ref) {\n  var node = _ref.node,\n      children = _ref.children,\n      props = _objectWithoutProperties(_ref, [\"node\", \"children\"]);\n\n  var regularParagraph = /*#__PURE__*/_jsx(Paragraph, _objectSpread(_objectSpread({}, props), {}, {\n    children: children\n  }));\n\n  var link = EmbeddedLink.fromChildren(children);\n  if (!link) return regularParagraph;\n\n  if (EmbeddedLink.isYoutubeLink(link)) {\n    return /*#__PURE__*/_jsx(\"iframe\", {\n      width: \"560\",\n      height: \"315\",\n      src: link,\n      title: \"YouTube video player\",\n      frameBorder: \"0\",\n      allow: \"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\",\n      allowFullScreen: true\n    });\n  }\n\n  return regularParagraph;\n};\n\nexport default EmbeddedLinkOrParagraph;","map":null,"metadata":{},"sourceType":"module"}