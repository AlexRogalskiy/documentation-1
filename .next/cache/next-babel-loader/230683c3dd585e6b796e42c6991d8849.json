{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Mark\\\\Documents\\\\documentation\\\\components\\\\markdown\\\\components\\\\code-block.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport * as hljs from 'highlight.js/lib/core';\nimport { Button } from 'antd'; // Icon for Copy Button\n\nimport { GrCopy } from 'react-icons/all';\nimport { useNotification } from '@/core/hooks/use-notification';\nimport styles from './markdown-components.module.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nhljs.registerLanguage('yaml', require('highlight.js/lib/languages/yaml'));\nhljs.registerLanguage('csharp', require('highlight.js/lib/languages/csharp'));\nhljs.registerLanguage('javascript', require('highlight.js/lib/languages/javascript'));\nhljs.registerLanguage('typescript', require('highlight.js/lib/languages/typescript'));\nhljs.registerLanguage('bash', require('highlight.js/lib/languages/bash'));\nhljs.registerLanguage('ruby', require('highlight.js/lib/languages/ruby'));\nhljs.registerLanguage('powershell', require('highlight.js/lib/languages/powershell'));\n\nclass CodeBlock extends React.PureComponent {\n  constructor(properties) {\n    super(properties);\n    this.setRef = this.setRef.bind(this);\n  }\n\n  componentDidMount() {\n    this.highlightCode();\n  }\n\n  componentDidUpdate() {\n    this.highlightCode();\n  }\n\n  setRef(element) {\n    this.codeEl = element;\n  }\n\n  highlightCode() {\n    hljs.highlightBlock(this.codeEl);\n  }\n\n  render() {\n    const {\n      children,\n      language\n    } = this.props; // Add Styling to button here.\n    // TODO decide if the button should be left or right aligned.\n\n    const CopyButton = () => /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: 'absolute',\n        top: 8,\n        right: 8\n      },\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        onClick: () => {\n          navigator.clipboard.writeText(children[0]);\n          useNotification().info({\n            message: 'Code Copied Successfully'\n          });\n        },\n        children: /*#__PURE__*/_jsxDEV(GrCopy, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this);\n\n    return /*#__PURE__*/_jsxDEV(\"pre\", {\n      className: styles.codeBlock,\n      children: [/*#__PURE__*/_jsxDEV(CopyButton, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: this.setRef,\n        className: `language-${language}`,\n        children: children\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nCodeBlock.defaultProps = {\n  language: ''\n};\nCodeBlock.propTypes = {\n  children: PropTypes.string.isRequired,\n  language: PropTypes.string\n};\nexport default CodeBlock;","map":{"version":3,"sources":["C:/Users/Mark/Documents/documentation/components/markdown/components/code-block.js"],"names":["React","PropTypes","hljs","Button","GrCopy","useNotification","styles","registerLanguage","require","CodeBlock","PureComponent","constructor","properties","setRef","bind","componentDidMount","highlightCode","componentDidUpdate","element","codeEl","highlightBlock","render","children","language","props","CopyButton","position","top","right","navigator","clipboard","writeText","info","message","codeBlock","defaultProps","propTypes","string","isRequired"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAO,KAAKC,IAAZ,MAAsB,uBAAtB;AAEA,SAASC,MAAT,QAAuB,MAAvB,C,CAEA;;AACA,SAASC,MAAT,QAAuB,iBAAvB;AAEA,SAASC,eAAT,QAAgC,+BAAhC;AACA,OAAOC,MAAP,MAAmB,mCAAnB;;AAEAJ,IAAI,CAACK,gBAAL,CAAsB,MAAtB,EAA8BC,OAAO,CAAC,iCAAD,CAArC;AACAN,IAAI,CAACK,gBAAL,CAAsB,QAAtB,EAAgCC,OAAO,CAAC,mCAAD,CAAvC;AACAN,IAAI,CAACK,gBAAL,CAAsB,YAAtB,EAAoCC,OAAO,CAAC,uCAAD,CAA3C;AACAN,IAAI,CAACK,gBAAL,CAAsB,YAAtB,EAAoCC,OAAO,CAAC,uCAAD,CAA3C;AACAN,IAAI,CAACK,gBAAL,CAAsB,MAAtB,EAA8BC,OAAO,CAAC,iCAAD,CAArC;AACAN,IAAI,CAACK,gBAAL,CAAsB,MAAtB,EAA8BC,OAAO,CAAC,iCAAD,CAArC;AACAN,IAAI,CAACK,gBAAL,CAAsB,YAAtB,EAAoCC,OAAO,CAAC,uCAAD,CAA3C;;AAEA,MAAMC,SAAN,SAAwBT,KAAK,CAACU,aAA9B,CAA4C;AAC1CC,EAAAA,WAAW,CAACC,UAAD,EAAa;AACtB,UAAMA,UAAN;AACA,SAAKC,MAAL,GAAc,KAAKA,MAAL,CAAYC,IAAZ,CAAiB,IAAjB,CAAd;AACD;;AAEDC,EAAAA,iBAAiB,GAAG;AAClB,SAAKC,aAAL;AACD;;AAEDC,EAAAA,kBAAkB,GAAG;AACnB,SAAKD,aAAL;AACD;;AAEDH,EAAAA,MAAM,CAACK,OAAD,EAAU;AACd,SAAKC,MAAL,GAAcD,OAAd;AACD;;AAEDF,EAAAA,aAAa,GAAG;AACdd,IAAAA,IAAI,CAACkB,cAAL,CAAoB,KAAKD,MAAzB;AACD;;AAEDE,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEC,MAAAA,QAAF;AAAYC,MAAAA;AAAZ,QAAyB,KAAKC,KAApC,CADO,CAGP;AACA;;AACA,UAAMC,UAAU,GAAG,mBACjB;AACE,MAAA,KAAK,EAAE;AACLC,QAAAA,QAAQ,EAAE,UADL;AAELC,QAAAA,GAAG,EAAE,CAFA;AAGLC,QAAAA,KAAK,EAAE;AAHF,OADT;AAAA,6BAOE,QAAC,MAAD;AACE,QAAA,OAAO,EAAE,MAAM;AACbC,UAAAA,SAAS,CAACC,SAAV,CAAoBC,SAApB,CAA8BT,QAAQ,CAAC,CAAD,CAAtC;AACAjB,UAAAA,eAAe,GAAG2B,IAAlB,CAAuB;AACrBC,YAAAA,OAAO,EAAE;AADY,WAAvB;AAGD,SANH;AAAA,+BAQE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AARF;AAAA;AAAA;AAAA;AAAA;AAPF;AAAA;AAAA;AAAA;AAAA,YADF;;AAqBA,wBACE;AAAK,MAAA,SAAS,EAAE3B,MAAM,CAAC4B,SAAvB;AAAA,8BACE,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAK,QAAA,GAAG,EAAE,KAAKrB,MAAf;AAAuB,QAAA,SAAS,EAAG,YAAWU,QAAS,EAAvD;AAAA,kBACGD;AADH;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAQD;;AAxDyC;;AA2D5Cb,SAAS,CAAC0B,YAAV,GAAyB;AACvBZ,EAAAA,QAAQ,EAAE;AADa,CAAzB;AAIAd,SAAS,CAAC2B,SAAV,GAAsB;AACpBd,EAAAA,QAAQ,EAAErB,SAAS,CAACoC,MAAV,CAAiBC,UADP;AAEpBf,EAAAA,QAAQ,EAAEtB,SAAS,CAACoC;AAFA,CAAtB;AAKA,eAAe5B,SAAf","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport * as hljs from 'highlight.js/lib/core';\r\n\r\nimport { Button } from 'antd';\r\n\r\n// Icon for Copy Button\r\nimport { GrCopy } from 'react-icons/all';\r\n\r\nimport { useNotification } from '@/core/hooks/use-notification';\r\nimport styles from './markdown-components.module.scss';\r\n\r\nhljs.registerLanguage('yaml', require('highlight.js/lib/languages/yaml'));\r\nhljs.registerLanguage('csharp', require('highlight.js/lib/languages/csharp'));\r\nhljs.registerLanguage('javascript', require('highlight.js/lib/languages/javascript'));\r\nhljs.registerLanguage('typescript', require('highlight.js/lib/languages/typescript'));\r\nhljs.registerLanguage('bash', require('highlight.js/lib/languages/bash'));\r\nhljs.registerLanguage('ruby', require('highlight.js/lib/languages/ruby'));\r\nhljs.registerLanguage('powershell', require('highlight.js/lib/languages/powershell'));\r\n\r\nclass CodeBlock extends React.PureComponent {\r\n  constructor(properties) {\r\n    super(properties);\r\n    this.setRef = this.setRef.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.highlightCode();\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    this.highlightCode();\r\n  }\r\n\r\n  setRef(element) {\r\n    this.codeEl = element;\r\n  }\r\n\r\n  highlightCode() {\r\n    hljs.highlightBlock(this.codeEl);\r\n  }\r\n\r\n  render() {\r\n    const { children, language } = this.props;\r\n\r\n    // Add Styling to button here.\r\n    // TODO decide if the button should be left or right aligned.\r\n    const CopyButton = () => (\r\n      <div\r\n        style={{\r\n          position: 'absolute',\r\n          top: 8,\r\n          right: 8,\r\n        }}\r\n      >\r\n        <Button\r\n          onClick={() => {\r\n            navigator.clipboard.writeText(children[0]);\r\n            useNotification().info({\r\n              message: 'Code Copied Successfully',\r\n            });\r\n          }}\r\n        >\r\n          <GrCopy />\r\n        </Button>\r\n      </div>\r\n    );\r\n\r\n    return (\r\n      <pre className={styles.codeBlock}>\r\n        <CopyButton />\r\n        <div ref={this.setRef} className={`language-${language}`}>\r\n          {children}\r\n        </div>\r\n      </pre>\r\n    );\r\n  }\r\n}\r\n\r\nCodeBlock.defaultProps = {\r\n  language: '',\r\n};\r\n\r\nCodeBlock.propTypes = {\r\n  children: PropTypes.string.isRequired,\r\n  language: PropTypes.string,\r\n};\r\n\r\nexport default CodeBlock;\r\n"]},"metadata":{},"sourceType":"module"}