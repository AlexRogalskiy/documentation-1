{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { MenuNode } from '@/tools/menu/menu-node';\nimport { MenuSegment } from '@/tools/menu/menu-segment';\nimport React, { useContext } from 'react';\nimport { Menu } from 'antd';\nimport { map } from 'lodash';\nimport Link from 'next/link';\nimport VersionedTitle from '@/components/pages/docs/menu/versioned-title';\nimport MenuContext from '@/components/pages/docs/menu/menu-context';\nimport { useSelector } from 'react-redux';\nimport { selectedVersionsSelector } from '@/logic/versions/selected-version-slice';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar SubMenu = Menu.SubMenu,\n    Item = Menu.Item;\n\nvar populateMenuRecursively = function populateMenuRecursively(collection, selections) {\n  // Todo sorting by item.meta.order\n  return map(Object.entries(collection), function (_ref) {\n    var _ref2 = _slicedToArray(_ref, 2),\n        segment = _ref2[0],\n        node = _ref2[1];\n\n    if (MenuSegment.isMeta(segment)) {\n      return null;\n    }\n\n    if (MenuNode.isPage(node)) {\n      return /*#__PURE__*/_jsx(Item, {\n        children: /*#__PURE__*/_jsx(Link, {\n          href: \"/docs/[...documentation-page]\",\n          as: \"/docs/\".concat(node.meta.path),\n          children: /*#__PURE__*/_jsx(\"a\", {\n            children: node.name\n          })\n        })\n      }, \"/docs/\".concat(node.meta.path));\n    }\n\n    if (MenuSegment.isVersionContainer(segment)) {\n      var meta = node.meta,\n          versions = _objectWithoutProperties(node, [\"meta\"]);\n\n      var selectedVersion = selections[meta.path];\n      return map(Object.entries(versions), function (_ref3) {\n        var _ref4 = _slicedToArray(_ref3, 2),\n            versionSegment = _ref4[0],\n            versionNode = _ref4[1];\n\n        // Todo - take hardcoded selected version from globally selected version for meta.section\n        return versionSegment === selectedVersion ? populateMenuRecursively(versionNode, selections) : [];\n      });\n    } // container with menu items\n\n\n    return /*#__PURE__*/_jsx(SubMenu, {\n      title: MenuSegment.toTitle(segment),\n      children: populateMenuRecursively(node, selections)\n    }, node.meta.path);\n  });\n};\n\nvar VersionedSubMenu = function VersionedSubMenu(_ref5) {\n  var section = _ref5.section,\n      title = _ref5.title,\n      icon = _ref5.icon,\n      children = _ref5.children,\n      props = _objectWithoutProperties(_ref5, [\"section\", \"title\", \"icon\", \"children\"]);\n\n  var selectedVersions = useSelector(selectedVersionsSelector);\n\n  var _useContext = useContext(MenuContext),\n      menuStructure = _useContext.menuStructure;\n\n  var docs = menuStructure.docs;\n  return /*#__PURE__*/_jsxs(SubMenu, _objectSpread(_objectSpread({}, props), {}, {\n    icon: icon,\n    title: /*#__PURE__*/_jsx(VersionedTitle, {\n      section: section,\n      title: title\n    }),\n    children: [populateMenuRecursively(docs[section], selectedVersions), children]\n  }));\n};\n\nVersionedSubMenu.defaultProps = {\n  children: null\n};\nexport default VersionedSubMenu;","map":null,"metadata":{},"sourceType":"module"}