{"ast":null,"code":"import Article from '@/components/markdown/components/article';\nimport ReactMarkdown from 'react-markdown';\nimport PropTypes from 'prop-types';\nimport remarkGfm from 'remark-gfm';\nimport components from './markdown-components';\nimport EditOnGithubLink from '../pages/docs/edit-on-github-link';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar propTypes = {\n  document: PropTypes.string.isRequired,\n  meta: PropTypes.shape({\n    title: PropTypes.string,\n    date: PropTypes.string\n  }).isRequired\n};\n\nvar MarkdownRenderer = function MarkdownRenderer(_ref) {\n  var document = _ref.document,\n      meta = _ref.meta;\n  var _meta$title = meta.title,\n      title = _meta$title === void 0 ? '' : _meta$title,\n      _meta$date = meta.date,\n      date = _meta$date === void 0 ? '' : _meta$date;\n  var metaInformation = \"\".concat(date, \" - \").concat(title).replace(/(^\\s-\\s)|(\\s-\\s$)/, '');\n  return /*#__PURE__*/_jsxs(\"div\", {\n    children: [/*#__PURE__*/_jsx(\"sub\", {\n      children: metaInformation\n    }), /*#__PURE__*/_jsx(Article, {\n      children: /*#__PURE__*/_jsx(ReactMarkdown, {\n        components: components,\n        remarkPlugins: [remarkGfm],\n        children: document\n      })\n    }), /*#__PURE__*/_jsx(EditOnGithubLink, {})]\n  });\n};\n\nexport default MarkdownRenderer;","map":null,"metadata":{},"sourceType":"module"}