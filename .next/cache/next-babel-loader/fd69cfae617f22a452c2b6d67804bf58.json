{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Mark\\\\Documents\\\\documentation\\\\pages\\\\_app.tsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from 'react';\nimport 'firebase/auth';\nimport 'firebase/firestore';\nimport { IconContext } from 'react-icons';\nimport { InstantSearch } from 'react-instantsearch-dom';\nimport { client as searchClient, indexName as searchIndex } from '@/core/search';\nimport { Provider } from 'react-redux';\nimport { configureStore } from '@reduxjs/toolkit';\nimport { reducer } from 'logic';\nimport { FirebaseAppProvider } from 'reactfire';\nimport config from 'core/config';\nimport '../assets/styles/antd-custom.less';\nimport 'highlight.js/styles/dracula.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst store = configureStore({\n  reducer\n});\nexport default function App({\n  Component,\n  pageProps\n}) {\n  return /*#__PURE__*/_jsxDEV(Provider, {\n    store: store,\n    children: /*#__PURE__*/_jsxDEV(FirebaseAppProvider, {\n      firebaseConfig: config.firebase,\n      children: /*#__PURE__*/_jsxDEV(InstantSearch, {\n        searchClient: searchClient,\n        indexName: searchIndex,\n        children: /*#__PURE__*/_jsxDEV(IconContext.Provider, {\n          value: {\n            className: 'anticon'\n          },\n          children: /*#__PURE__*/_jsxDEV(Component, _objectSpread({}, pageProps), void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n}","map":{"version":3,"sources":["C:/Users/Mark/Documents/documentation/pages/_app.tsx"],"names":["React","IconContext","InstantSearch","client","searchClient","indexName","searchIndex","Provider","configureStore","reducer","FirebaseAppProvider","config","store","App","Component","pageProps","firebase","className"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,eAAP;AACA,OAAO,oBAAP;AAEA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,aAAT,QAA8B,yBAA9B;AACA,SAASC,MAAM,IAAIC,YAAnB,EAAiCC,SAAS,IAAIC,WAA9C,QAAiE,eAAjE;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,SAASC,cAAT,QAA+B,kBAA/B;AACA,SAASC,OAAT,QAAwB,OAAxB;AACA,SAASC,mBAAT,QAAoC,WAApC;AACA,OAAOC,MAAP,MAAmB,aAAnB;AAEA,OAAO,mCAAP;AACA,OAAO,iCAAP;;AAEA,MAAMC,KAAK,GAAGJ,cAAc,CAAC;AAAEC,EAAAA;AAAF,CAAD,CAA5B;AAEA,eAAe,SAASI,GAAT,CAAa;AAAEC,EAAAA,SAAF;AAAaC,EAAAA;AAAb,CAAb,EAAiD;AAC9D,sBACE,QAAC,QAAD;AAAU,IAAA,KAAK,EAAEH,KAAjB;AAAA,2BACE,QAAC,mBAAD;AAAqB,MAAA,cAAc,EAAED,MAAM,CAACK,QAA5C;AAAA,6BACE,QAAC,aAAD;AAAe,QAAA,YAAY,EAAEZ,YAA7B;AAA2C,QAAA,SAAS,EAAEE,WAAtD;AAAA,+BACE,QAAC,WAAD,CAAa,QAAb;AAAsB,UAAA,KAAK,EAAE;AAAEW,YAAAA,SAAS,EAAE;AAAb,WAA7B;AAAA,iCACE,QAAC,SAAD,oBAAeF,SAAf;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAWD","sourcesContent":["import React from 'react';\r\nimport 'firebase/auth';\r\nimport 'firebase/firestore';\r\nimport { AppProps } from 'next/app';\r\nimport { IconContext } from 'react-icons';\r\nimport { InstantSearch } from 'react-instantsearch-dom';\r\nimport { client as searchClient, indexName as searchIndex } from '@/core/search';\r\nimport { Provider } from 'react-redux';\r\nimport { configureStore } from '@reduxjs/toolkit';\r\nimport { reducer } from 'logic';\r\nimport { FirebaseAppProvider } from 'reactfire';\r\nimport config from 'core/config';\r\n\r\nimport '../assets/styles/antd-custom.less';\r\nimport 'highlight.js/styles/dracula.css';\r\n\r\nconst store = configureStore({ reducer });\r\n\r\nexport default function App({ Component, pageProps }: AppProps) {\r\n  return (\r\n    <Provider store={store}>\r\n      <FirebaseAppProvider firebaseConfig={config.firebase}>\r\n        <InstantSearch searchClient={searchClient} indexName={searchIndex}>\r\n          <IconContext.Provider value={{ className: 'anticon' }}>\r\n            <Component {...pageProps} />\r\n          </IconContext.Provider>\r\n        </InstantSearch>\r\n      </FirebaseAppProvider>\r\n    </Provider>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}