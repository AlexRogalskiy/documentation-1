{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Mark\\\\Documents\\\\documentation\\\\components\\\\markdown\\\\components\\\\heading-with-anchor.tsx\";\nimport React from 'react';\nimport { notification } from 'antd';\nimport Heading from '@/components/markdown/components/heading';\nimport { extractAnchorId } from '@/tools/search/utils/extract-sections';\nimport styles from './markdown-components.module.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst copyUrlToClipboard = (hash, onSuccess = () => {}, onError = () => {}) => {\n  const {\n    href\n  } = window.location;\n  const hashIndex = href.indexOf('#');\n  const baseUrl = hashIndex >= 0 ? href.slice(0, hashIndex) : href;\n  const link = `${baseUrl}#${hash}`;\n  navigator.clipboard.writeText(link).then(onSuccess, onError);\n};\n\nconst onSuccessfullyCopied = () => {\n  notification.info({\n    message: `Link was copied to clipboard.`\n  });\n};\n\nconst HeadingWithAnchor = ({\n  level,\n  children\n}) => {\n  const value = React.Children.toArray(children)[0];\n  const anchorId = extractAnchorId(value);\n\n  const onClick = () => {\n    copyUrlToClipboard(anchorId, onSuccessfullyCopied);\n  };\n\n  const onKeyPress = event => {\n    if (event.keyCode === 13) {\n      copyUrlToClipboard(anchorId, onSuccessfullyCopied);\n    }\n  };\n\n  const anchor = /*#__PURE__*/_jsxDEV(\"span\", {\n    onClick: onClick,\n    className: styles.anchor,\n    role: \"button\",\n    tabIndex: 0,\n    onKeyPress: onKeyPress,\n    children: \"#\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n\n  return /*#__PURE__*/_jsxDEV(Heading, {\n    level: level,\n    id: anchorId,\n    children: [children, level >= 2 && anchor]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n};\n\nexport default HeadingWithAnchor;","map":{"version":3,"sources":["C:/Users/Mark/Documents/documentation/components/markdown/components/heading-with-anchor.tsx"],"names":["React","notification","Heading","extractAnchorId","styles","copyUrlToClipboard","hash","onSuccess","onError","href","window","location","hashIndex","indexOf","baseUrl","slice","link","navigator","clipboard","writeText","then","onSuccessfullyCopied","info","message","HeadingWithAnchor","level","children","value","Children","toArray","anchorId","onClick","onKeyPress","event","keyCode","anchor"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,YAAT,QAA6B,MAA7B;AACA,OAAOC,OAAP,MAAoB,0CAApB;AACA,SAASC,eAAT,QAAgC,uCAAhC;AAEA,OAAOC,MAAP,MAAmB,mCAAnB;;;AAOA,MAAMC,kBAAkB,GAAG,CAACC,IAAD,EAAOC,SAAS,GAAG,MAAM,CAAE,CAA3B,EAA6BC,OAAO,GAAG,MAAM,CAAE,CAA/C,KAAoD;AAC7E,QAAM;AAAEC,IAAAA;AAAF,MAAWC,MAAM,CAACC,QAAxB;AAEA,QAAMC,SAAS,GAAGH,IAAI,CAACI,OAAL,CAAa,GAAb,CAAlB;AACA,QAAMC,OAAO,GAAGF,SAAS,IAAI,CAAb,GAAiBH,IAAI,CAACM,KAAL,CAAW,CAAX,EAAcH,SAAd,CAAjB,GAA4CH,IAA5D;AACA,QAAMO,IAAI,GAAI,GAAEF,OAAQ,IAAGR,IAAK,EAAhC;AAEAW,EAAAA,SAAS,CAACC,SAAV,CAAoBC,SAApB,CAA8BH,IAA9B,EAAoCI,IAApC,CAAyCb,SAAzC,EAAoDC,OAApD;AACD,CARD;;AAUA,MAAMa,oBAAoB,GAAG,MAAM;AACjCpB,EAAAA,YAAY,CAACqB,IAAb,CAAkB;AAChBC,IAAAA,OAAO,EAAG;AADM,GAAlB;AAGD,CAJD;;AAMA,MAAMC,iBAAiB,GAAG,CAAC;AAAEC,EAAAA,KAAF;AAASC,EAAAA;AAAT,CAAD,KAAgC;AACxD,QAAMC,KAAK,GAAG3B,KAAK,CAAC4B,QAAN,CAAeC,OAAf,CAAuBH,QAAvB,EAAiC,CAAjC,CAAd;AACA,QAAMI,QAAQ,GAAG3B,eAAe,CAACwB,KAAD,CAAhC;;AAEA,QAAMI,OAAO,GAAG,MAAM;AACpB1B,IAAAA,kBAAkB,CAACyB,QAAD,EAAWT,oBAAX,CAAlB;AACD,GAFD;;AAIA,QAAMW,UAAU,GAAIC,KAAD,IAAW;AAC5B,QAAIA,KAAK,CAACC,OAAN,KAAkB,EAAtB,EAA0B;AACxB7B,MAAAA,kBAAkB,CAACyB,QAAD,EAAWT,oBAAX,CAAlB;AACD;AACF,GAJD;;AAMA,QAAMc,MAAM,gBACV;AACE,IAAA,OAAO,EAAEJ,OADX;AAEE,IAAA,SAAS,EAAE3B,MAAM,CAAC+B,MAFpB;AAGE,IAAA,IAAI,EAAC,QAHP;AAIE,IAAA,QAAQ,EAAE,CAJZ;AAKE,IAAA,UAAU,EAAEH,UALd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;;AAYA,sBACE,QAAC,OAAD;AAAS,IAAA,KAAK,EAAEP,KAAhB;AAAuB,IAAA,EAAE,EAAEK,QAA3B;AAAA,eACGJ,QADH,EAEGD,KAAK,IAAI,CAAT,IAAcU,MAFjB;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAMD,CAhCD;;AAkCA,eAAeX,iBAAf","sourcesContent":["import React from 'react';\r\nimport { notification } from 'antd';\r\nimport Heading from '@/components/markdown/components/heading';\r\nimport { extractAnchorId } from '@/tools/search/utils/extract-sections';\r\n\r\nimport styles from './markdown-components.module.scss';\r\n\r\ninterface Props {\r\n  level: number;\r\n  children: React.ReactNode;\r\n}\r\n\r\nconst copyUrlToClipboard = (hash, onSuccess = () => {}, onError = () => {}) => {\r\n  const { href } = window.location;\r\n\r\n  const hashIndex = href.indexOf('#');\r\n  const baseUrl = hashIndex >= 0 ? href.slice(0, hashIndex) : href;\r\n  const link = `${baseUrl}#${hash}`;\r\n\r\n  navigator.clipboard.writeText(link).then(onSuccess, onError);\r\n};\r\n\r\nconst onSuccessfullyCopied = () => {\r\n  notification.info({\r\n    message: `Link was copied to clipboard.`,\r\n  });\r\n};\r\n\r\nconst HeadingWithAnchor = ({ level, children }: Props) => {\r\n  const value = React.Children.toArray(children)[0];\r\n  const anchorId = extractAnchorId(value);\r\n\r\n  const onClick = () => {\r\n    copyUrlToClipboard(anchorId, onSuccessfullyCopied);\r\n  };\r\n\r\n  const onKeyPress = (event) => {\r\n    if (event.keyCode === 13) {\r\n      copyUrlToClipboard(anchorId, onSuccessfullyCopied);\r\n    }\r\n  };\r\n\r\n  const anchor = (\r\n    <span\r\n      onClick={onClick}\r\n      className={styles.anchor}\r\n      role=\"button\"\r\n      tabIndex={0}\r\n      onKeyPress={onKeyPress}\r\n    >\r\n      #\r\n    </span>\r\n  );\r\n\r\n  return (\r\n    <Heading level={level} id={anchorId}>\r\n      {children}\r\n      {level >= 2 && anchor}\r\n    </Heading>\r\n  );\r\n};\r\n\r\nexport default HeadingWithAnchor;\r\n"]},"metadata":{},"sourceType":"module"}