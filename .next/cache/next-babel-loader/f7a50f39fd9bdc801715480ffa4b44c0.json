{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nexport var sleep = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(ms) {\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            return _context.abrupt(\"return\", new Promise(function (resolve) {\n              return setTimeout(resolve, ms);\n            }));\n\n          case 1:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function sleep(_x) {\n    return _ref.apply(this, arguments);\n  };\n}();","map":{"version":3,"sources":["C:/Users/Mark/Documents/documentation/tools/utils/sleep.ts"],"names":["sleep","ms","Promise","resolve","setTimeout"],"mappings":";;AAAA,OAAO,IAAMA,KAAK;AAAA,sEAAG,iBAAOC,EAAP;AAAA;AAAA;AAAA;AAAA;AAAA,6CACZ,IAAIC,OAAJ,CAAY,UAACC,OAAD;AAAA,qBAAaC,UAAU,CAACD,OAAD,EAAUF,EAAV,CAAvB;AAAA,aAAZ,CADY;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAALD,KAAK;AAAA;AAAA;AAAA,GAAX","sourcesContent":["export const sleep = async (ms) => {\r\n  return new Promise((resolve) => setTimeout(resolve, ms));\r\n};\r\n"]},"metadata":{},"sourceType":"module"}