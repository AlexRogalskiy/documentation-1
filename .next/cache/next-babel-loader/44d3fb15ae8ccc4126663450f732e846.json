{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { SimpleAuthCheck } from '@/components/auth/safe-auth-check';\nimport DockerImageLink from '@/components/docs/versions/docker-image-link';\nimport { useAuthenticatedEndpoint } from '@/core/hooks/use-authenticated-endpoint';\nimport { useNotification } from '@/core/hooks/use-notification';\nimport { Tooltip } from 'antd';\nimport React, { useState } from 'react';\nimport { HiOutlineRefresh } from 'react-icons/all';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nvar DockerImageLinkOrRetryButton = function DockerImageLinkOrRetryButton(_ref) {\n  var record = _ref.record;\n  var buildInfo = record.buildInfo,\n      dockerInfo = record.dockerInfo,\n      buildId = record.buildId,\n      relatedJobId = record.relatedJobId;\n  var baseOs = buildInfo.baseOs,\n      editorVersion = buildInfo.editorVersion,\n      targetPlatform = buildInfo.targetPlatform,\n      repoVersion = buildInfo.repoVersion;\n\n  var _ref2 = dockerInfo || {},\n      imageRepo = _ref2.imageRepo,\n      imageName = _ref2.imageName;\n\n  var imageTag = \"\".concat(baseOs, \"-\").concat(editorVersion, \"-\").concat(targetPlatform, \"-\").concat(repoVersion);\n\n  var _useState = useState(false),\n      retryRequested = _useState[0],\n      setRetryRequested = _useState[1];\n\n  var notify = useNotification();\n  var retryBuild = useAuthenticatedEndpoint('retryBuild', {\n    buildId: buildId,\n    relatedJobId: relatedJobId\n  });\n\n  if (dockerInfo) {\n    return /*#__PURE__*/_jsx(DockerImageLink, {\n      imageRepo: imageRepo,\n      imageName: imageName,\n      imageTag: imageTag\n    });\n  }\n\n  var onClick = /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var result;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              setRetryRequested(true);\n              _context.next = 4;\n              return retryBuild();\n\n            case 4:\n              result = _context.sent;\n              notify.success(result);\n              _context.next = 12;\n              break;\n\n            case 8:\n              _context.prev = 8;\n              _context.t0 = _context[\"catch\"](0);\n              setRetryRequested(false);\n              notify.error(_context.t0);\n\n            case 12:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[0, 8]]);\n    }));\n\n    return function onClick() {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n\n  return /*#__PURE__*/_jsx(SimpleAuthCheck, {\n    fallback: /*#__PURE__*/_jsx(\"span\", {}),\n    requiredClaims: {\n      admin: true\n    },\n    children: /*#__PURE__*/_jsx(Tooltip, {\n      title: \"Delete tag \\\"\".concat(imageTag, \"\\\" then click this retry button.\"),\n      children: /*#__PURE__*/_jsx(\"button\", {\n        type: \"button\",\n        onClick: onClick,\n        style: {\n          padding: 0,\n          border: 0,\n          outline: 0,\n          cursor: 'pointer'\n        },\n        children: /*#__PURE__*/_jsx(HiOutlineRefresh, {\n          color: retryRequested ? 'orange' : 'red'\n        })\n      })\n    })\n  });\n};\n\nexport default DockerImageLinkOrRetryButton;","map":null,"metadata":{},"sourceType":"module"}